@using System.IO
@using System.Linq.Expressions

@using eIVOGo.Helper
@using eIVOGo.Models
@using eIVOGo.Models.ViewModel
@using Model.Models.ViewModel
@using eIVOGo.Controllers
@using Model.DataEntity
@using Model.Helper
@using Model.Locale
@using Uxnet.Web.WebUI
@using Utility
@using Newtonsoft.Json

@{
    ModelSource<InvoiceItem> models;
    IQueryable<InvoiceItem> _model;

    models = ((SampleController<InvoiceItem>)ViewContext.Controller).DataSource;
    _model = (IQueryable<InvoiceItem>)this.Model;
}

@functions {
    public class _PackItem
    {
        public int PackageID { get; set; }
        public int InvoiceID { get; set; }
        public String CustomerID { get; set; }
        public String InvoiceNo { get; set; }
        public String ContactName { get; set; }
        public String Address { get; set; }
        public String Remark { get; set; }
    }
}
<script>
    $(function () {
        if (!uiHandling.items) {
            uiHandling.items = [];
        }

        @if (_model.Any())
        {
            List<_PackItem> items = new List<_PackItem>();
            //var grouping = _model.GroupBy(i => i.InvoiceBuyer.Address)
            //                            .OrderBy(a => a.Key);
            //Logger.Debug(models.GetDataContext().GetCommand(grouping).CommandText);
            var dataItems = _model.ToList();
            foreach (var g in dataItems.GroupBy(i => i.InvoiceBuyer.Address)
                                        .OrderBy(a => a.Key))
            {
                foreach (var i in g)
                {
                    items.Add(new _PackItem
                    {
                        PackageID = g.First().InvoiceID,
                        InvoiceID = i.InvoiceID,
                        CustomerID = i.InvoiceBuyer.CustomerID,
                        InvoiceNo = i.TrackCode + i.No,
                        ContactName = i.InvoiceBuyer.ContactName,
                        Address = i.InvoiceBuyer.Address,
                        Remark = ""
                    });

                    Logger.Info($"PackageID:{items.Last().PackageID}");
                }
            }
            //var items = _model.ToList()
            //    .Select(i =>
            //    new _PackItem
            //    {
            //        PackageID = i.InvoiceID,
            //        InvoiceID = i.InvoiceID,
            //        CustomerID = i.InvoiceBuyer.CustomerID,
            //        InvoiceNo = i.TrackCode + i.No,
            //        ContactName = i.InvoiceBuyer.ContactName,
            //        Address = i.InvoiceBuyer.Address,
            //        Remark = ""
            //    }).ToList();
            //var preItem = items[0];
            //for (int i = 1; i < items.Count; i++)
            //{
            //    var current = items[i];
            //    if (current.ContactName == preItem.ContactName && current.Address == preItem.Address)
            //    {
            //        current.PackageID = preItem.PackageID;
            //    }
            //    preItem = current;
            //}
    <text>
        var newItems = @(Html.Raw(JsonConvert.SerializeObject(items)));
        uiHandling.items = uiHandling.items.concat(newItems);
        uiHandling.showDetails();
    </text>
        }
    });
</script>


