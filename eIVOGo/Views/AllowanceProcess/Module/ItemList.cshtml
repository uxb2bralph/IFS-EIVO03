
@using System.Linq
@using System.IO
@using System.Linq.Expressions

@using Newtonsoft.Json
@using eIVOGo.Controllers
@using eIVOGo.Helper
@using eIVOGo.Models
@using eIVOGo.Models.ViewModel
@using Model.Models.ViewModel
@using Model.DataEntity
@using Model.Locale
@using Utility
@using Uxnet.Web.WebUI
@using Business.Helper
@using Model.Helper
@functions
{
    ModelSource<InvoiceItem> models;
    IQueryable<InvoiceAllowance> _model;
    String _dataItemView;
    InquireInvoiceViewModel _viewModel;
}

@{

    models = ((SampleController<InvoiceItem>)ViewContext.Controller).DataSource;
    _model = (IQueryable<InvoiceAllowance>)this.Model;
    _viewModel = (InquireInvoiceViewModel)ViewBag.ViewModel;

    Html.RenderPartial("~/Views/AllowanceProcess/Module/ItemListSorting.cshtml");

    _dataItemView = ViewBag.DataItemView ?? "~/Views/AllowanceProcess/Module/DataItem.cshtml";

    IQueryable<InvoiceAllowance> items;
    int pageIndex = _viewModel.PageIndex ?? 0;
    int pageSize = _viewModel.PageSize ?? 10;

    if (TempData["SortedItems"] == null)
    {
        if (_viewModel.Paging == false)
        {
            items = _model;
        }
        else
        {
            items = _model
                .Skip(pageIndex * pageSize)
                .Take(pageSize);
        }
    }
    else
    {
        if (_viewModel.Paging == false)
        {
            items = ((IQueryable<InvoiceAllowance>)TempData["SortedItems"]);
        }
        else
        {
            items = ((IQueryable<InvoiceAllowance>)TempData["SortedItems"])
                .Skip(pageIndex * pageSize)
                .Take(pageSize);
        }
    }


}
@{ int idx = 0;}
@foreach (var item in items)
{
    idx++;
    <tr>
        @{
            Html.RenderPartial(_dataItemView, item);
        }
    </tr>
}



