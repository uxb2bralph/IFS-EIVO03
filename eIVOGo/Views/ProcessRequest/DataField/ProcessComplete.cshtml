@using System.IO
@using System.Linq.Expressions

@using Business.Helper
@using DataAccessLayer.basis
@using eIVOGo.Helper
@using eIVOGo.Models
@using eIVOGo.Controllers
@using eIVOGo.Models.ViewModel
@using Model.DataEntity
@using Model.Helper
@using Model.Locale
@using Model.Security.MembershipManagement
@using Model.Models.ViewModel
@using Utility
@using Uxnet.Web.WebUI
@using Newtonsoft.Json

@{
    ModelStateDictionary _modelState;
    GenericManager<EIVOEntityDataContext> models;

    models = ViewContext.Controller.DataSource();
    UserProfileMember _profile = Context.GetUser();
    _modelState = (ModelStateDictionary)ViewBag.ModelState;
    ProcessRequestQueryViewModel _viewModel = (ProcessRequestQueryViewModel)ViewBag.ViewModel;
}
@{
    Naming.FieldDisplayType? displayType = (Naming.FieldDisplayType?)ViewBag.DisplayType;
}
@switch (displayType)
{
    case Naming.FieldDisplayType.Header:
        <a href="javascript:void(0);" onclick="$inquiryAgent.sort('ProcessComplete',this);">任務結束</a>
        break;
    case Naming.FieldDisplayType.DataItem:
        ProcessRequest item = this.Model as ProcessRequest;
        <text>@($"{item.ProcessComplete:yyyy/MM/dd HH:mm:ss}")</text>
        break;
    case Naming.FieldDisplayType.SortBy:
        ProcessRequestQueryViewModel viewModel = (ProcessRequestQueryViewModel)ViewBag.ViewModel;
        if (viewModel.SortName != null)
        {
            int idx = System.Array.IndexOf(viewModel.SortName, "ProcessComplete");
            if (idx >= 0)
            {
                if (viewModel.SortType[idx] == (int)Naming.SortType.ASC)
                {
                    if (TempData["SortedItems"] != null)
                    {
                        TempData["SortedItems"] = ((IOrderedQueryable<ProcessRequest>)TempData["SortedItems"]).ThenBy(p => p.ProcessComplete);
                    }
                    else
                    {
                        TempData["SortedItems"] = ((IQueryable<ProcessRequest>)this.Model).OrderBy(p => p.ProcessComplete);
                    }
                }
                else if (viewModel.SortType[idx] == (int)Naming.SortType.DESC)
                {
                    if (TempData["SortedItems"] != null)
                    {
                        TempData["SortedItems"] = ((IOrderedQueryable<ProcessRequest>)TempData["SortedItems"]).ThenByDescending(p => p.ProcessComplete);
                    }
                    else
                    {
                        TempData["SortedItems"] = ((IQueryable<ProcessRequest>)this.Model).OrderByDescending(p => p.ProcessComplete);
                    }
                }
            }
        }
        break;
    case Naming.FieldDisplayType.Query:
<tr>
    <th>
        任務結束
    </th>
    <td class="tdleft">
        自&nbsp;<input name="ProcessCompleteFrom" class="form_date form-control" type="text" size="10" readonly="readonly" value="@($"{_viewModel?.ProcessCompleteFrom:yyyy/MM/dd}")" />
        &nbsp;至&nbsp;
        <input name="ProcessCompleteTo" class="form_date form-control" type="text" size="10" readonly="readonly" value="@($"{_viewModel?.ProcessCompleteTo:yyyy/MM/dd}")" />
    </td>
</tr>
        break;
    default:
        break;
}


