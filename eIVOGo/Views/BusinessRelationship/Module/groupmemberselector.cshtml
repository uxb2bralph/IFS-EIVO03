
@using System.IO
@using System.Linq.Expressions


@using eIVOGo.Helper
@using Model.Locale
@using eIVOGo.Models.ViewModel
@using Model.Models.ViewModel
@using Model.DataEntity
@using eIVOGo.Controllers

<select name="@(_model.Name)" id="@(_model.Id)">
    @if (ViewBag.SelectAll == true)
        {
    <option value="">全部</option>
    }
    @if (ViewBag.SelectIndication != null)
        {
            Writer.WriteLine(ViewBag.SelectIndication);
        }
    @foreach (var item in _items)
        {
    <option value="@(item.CompanyID)">@(String.Format("{0} {1}", item.ReceiptNo, item.CompanyName))</option>
    }
</select>
@if(_model.DefaultValue!=null)
    {
        <script>
            $(function () {
                $('select[name="@(_model.Name)"]').val('@(_model.DefaultValue)');
            });
        </script>
}
<script runat="server">

    ModelStateDictionary _modelState;
    ModelSource<InvoiceItem> models;
    InputViewModel _model;
    IEnumerable<Organization> _items;
    Model.Security.MembershipManagement.UserProfileMember _profile;

    protected override void OnInit(EventArgs e)
    {
        base.OnInit(e);
        _model = (InputViewModel)this.Model;
        if(_model==null)
        {
            _model = new InputViewModel
            {
                Name = "CompanyID",
                Id = "CompanyID_" + DateTime.Now.Ticks
            };
        }
        var models = ((SampleController<InvoiceItem>)ViewContext.Controller).DataSource;
        _profile = Business.Helper.WebPageUtility.UserProfile;

        if (_profile.IsSystemAdmin())
        {
            _items = models.GetTable<EnterpriseGroupMember>().Select(o => o.CompanyID)
                    .Distinct().Join(models.GetTable<Organization>(), d => d, o => o.CompanyID, (d, o) => o).OrderBy(o => o.ReceiptNo);

        }
        else
        {
            _items = models.GetTable<EnterpriseGroupMember>()
                    .Where(o => o.CompanyID == _profile.CurrentUserRole.OrganizationCategory.CompanyID)
                    .Select(o => o.CompanyID)
                    .Join(models.GetTable<Organization>(), d => d, o => o.CompanyID, (d, o) => o).OrderBy(o => o.ReceiptNo);
        }
    }

</script>

