
@using System.IO
@using System.Linq.Expressions

@using eIVOGo.Helper
@using eIVOGo.Models
@using eIVOGo.Controllers
@using eIVOGo.Models.ViewModel
@using Model.Models.ViewModel
@using Model.DataEntity
@using Model.Helper
@using Model.Locale
@using Utility
@using Uxnet.Web.WebUI
@{
    InquireInvoiceViewModel _viewModel;
    _viewModel = (InquireInvoiceViewModel)ViewBag.ViewModel;
}
@{ 
    switch (_viewModel.ResultAction)
    {
        case "Print":
            Html.RenderPartial("~/Views/InvoiceProcess/ResultAction/DoPrint.ascx");
            break;
        case "Notify":
            Html.RenderPartial("~/Views/InvoiceProcess/ResultAction/DoNotify.cshtml");
            break; 
        case "IssueAllowance":
        case "CancelInvoice":
            Html.RenderPartial("~/Views/InvoiceProcess/ResultAction/DoAction.cshtml");
            break; 
        case "CreateMIG":
            Html.RenderPartial("~/Views/InvoiceProcess/ResultAction/DownloadMIG.cshtml");
            break; 
        case "Authorize":
            Html.RenderPartial("~/Views/InvoiceProcess/ResultAction/DoAuthorize.cshtml");
            break; 
        case "Incoming":
            Html.RenderPartial("~/Views/InvoiceProcess/ResultAction/B2CQueryAction.cshtml");
            break; 
        case "Void":
            Html.RenderPartial("~/Views/InvoiceProcess/ResultAction/DoVoid.cshtml");
            break; 
        case "Allow":
            Html.RenderPartial("~/Views/InvoiceProcess/ResultAction/AllowToVoid.cshtml");
            break; 
        default:
            Html.RenderPartial("~/Views/InvoiceProcess/ResultAction/MainQueryAction.cshtml");
            break;
    }
}




