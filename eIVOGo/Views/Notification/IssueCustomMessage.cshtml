

@using System.Linq
@using System.IO
@using System.Linq.Expressions

@using Newtonsoft.Json
@using eIVOGo.Controllers
@using eIVOGo.Helper
@using eIVOGo.Models
@using eIVOGo.Models.ViewModel
@using Model.Models.ViewModel
@using eIVOGo.Module.Common
@using Model.DataEntity
@using Model.Helper
@using Model.Locale
@using Utility
@using Uxnet.Web.WebUI
@{

    ModelSource<InvoiceItem> models;
    InvoiceItem _model;
    DocumentQueryViewModel _viewModel;

    models = ((SampleController<InvoiceItem>)ViewContext.Controller).DataSource;
    _model = (InvoiceItem)this.Model;
    _viewModel = (DocumentQueryViewModel)ViewBag.ViewModel;
}

@if (_viewModel.ForTest == true)
{
    Html.RenderPartial("~/Views/Notification/Module/CustomMessage.cshtml", _model);
}
else
{
    String subject = "中獎電子發票郵件通知（更正通知）";
    String body = Html.Partial("~/Views/Notification/Module/CustomMessage.cshtml").ToString();
    var smtpSettings = _model.InvoiceSeller.Organization.CustomSmtpHost.Where(s => s.Status == (int)CustomSmtpHost.StatusType.Enabled).FirstOrDefault();

    var items = models.GetTable<InvoiceItem>()
            .Where(i => i.InvoiceCancellation == null)
            .Where(i => i.InvoiceDonation == null)
            .Where(i => i.PrintMark == "N")
            .Join(models.GetTable<Organization>()
                .Where(o => o.CompanyID == 8175)
                .Join(models.GetTable<OrganizationStatus>().Where(s => !s.DisableWinningNotice.HasValue || s.DisableWinningNotice == false),
                    o => o.CompanyID, s => s.CompanyID, (o, s) => o),
                i => i.SellerID, o => o.CompanyID, (i, o) => i)
            .Join(models.GetTable<InvoiceWinningNumber>()
                .Join(models.GetTable<UniformInvoiceWinningNumber>()
                    .Where(u => u.Year == 2019 && u.Period == 2),
                    w => w.WinningID, u => u.WinningID, (w, u) => w),
                i => i.InvoiceID, w => w.InvoiceID, (i, w) => i);

    foreach (var item in items)
    {
        var mailTo = item.InvoiceBuyer.EMail.GetEfficientString();

        if (mailTo == null)
        {
            continue;
        }
        mailTo = mailTo.Replace(';', ',').Replace('、', ',');
        if (!String.IsNullOrEmpty(mailTo))
        {
            body.SendMailMessage(mailTo, subject, smtpSettings);
        };
    }
}

