//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace InvoiceClient.WS_Invoice {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="eInvoiceServiceSoap", Namespace="http://www.uxb2b.com/")]
    public partial class eInvoiceService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback UploadInvoiceBuyerCmsCSVOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadInvoiceCmsCSVOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadInvoiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadAllowanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadB0401OperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadInvoiceAutoTrackNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadInvoiceCmsCSVAutoTrackNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadInvoiceCancellationCmsCSVOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadAllowanceCancellationCmsCSVOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadInvoiceCancellationOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadAllowanceCancellationOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadB0501OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUpdatedWelfareAgenciesInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWelfareAgenciesInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetIncomingInvoicesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInvoicesMapOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetIncomingInvoiceCancellationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetIncomingAllowancesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetIncomingAllowanceCancellationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AcknowledgeLivingReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetIncomingWinningInvoicesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSignerCertificateContentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRegisteredMemberOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadA0401OperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadA0201OperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadA0501OperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadB0201OperationCompleted;
        
        private System.Threading.SendOrPostCallback B2CUploadInvoiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback B2CUploadInvoiceCancellationOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReceiveContentAsPDFForSellerOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReceiveContentAsPDFForIssuerOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReceiveContentAsPDFOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReceiveAllowancePDFOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteTempForReceivePDFOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInvoiceMailTrackingOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInvoiceReturnedMailOperationCompleted;
        
        private System.Threading.SendOrPostCallback AlertFailedTransactionOperationCompleted;
        
        private System.Threading.SendOrPostCallback B2BUploadReceiptOperationCompleted;
        
        private System.Threading.SendOrPostCallback B2BUploadReceiptCancellationOperationCompleted;
        
        private System.Threading.SendOrPostCallback B2BUploadInvoiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback B2BUploadAllowanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback B2BUploadAllowanceCancellationOperationCompleted;
        
        private System.Threading.SendOrPostCallback B2BUploadInvoiceCancellationOperationCompleted;
        
        private System.Threading.SendOrPostCallback B2BUploadBuyerInvoiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadBranchTrackBlankOperationCompleted;
        
        private System.Threading.SendOrPostCallback AcknowledgeReceivingOperationCompleted;
        
        private System.Threading.SendOrPostCallback NotifyCounterpartBusinessOperationCompleted;
        
        private System.Threading.SendOrPostCallback B2BReceiveA0501OperationCompleted;
        
        private System.Threading.SendOrPostCallback B2BReceiveB0501OperationCompleted;
        
        private System.Threading.SendOrPostCallback ReceiveContentAsPDFB2BOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteTempForReceivePDFB2BOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadCounterpartBusinessOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetServiceInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadInvoiceAutoTrackNoByClientOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadInvoiceByClientOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadAllowanceByClientOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadInvoiceAutoTrackNoV2OperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadInvoiceCancellationV2OperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadAllowanceV2OperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadAllowanceCancellationV2OperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadInvoiceV2OperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadInvoiceCmsCSVAutoTrackNoV2OperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadAllowanceCmsCSVOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadBranchTrackOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadInvoiceV2_C0401OperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadAllowance_D0401OperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadInvoiceCancellationV2_C0501OperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadAllowanceCancellationV2_D0501OperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadInvoiceEnterpriseOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCurrentYearInvoiceTrackCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomerIdListByAgentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVacantInvoiceNoOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public eInvoiceService() {
            this.Url = global::InvoiceClient.Properties.Settings.Default.InvoiceClient_WS_Invoice_eInvoiceService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event UploadInvoiceBuyerCmsCSVCompletedEventHandler UploadInvoiceBuyerCmsCSVCompleted;
        
        /// <remarks/>
        public event UploadInvoiceCmsCSVCompletedEventHandler UploadInvoiceCmsCSVCompleted;
        
        /// <remarks/>
        public event UploadInvoiceCompletedEventHandler UploadInvoiceCompleted;
        
        /// <remarks/>
        public event UploadAllowanceCompletedEventHandler UploadAllowanceCompleted;
        
        /// <remarks/>
        public event UploadB0401CompletedEventHandler UploadB0401Completed;
        
        /// <remarks/>
        public event UploadInvoiceAutoTrackNoCompletedEventHandler UploadInvoiceAutoTrackNoCompleted;
        
        /// <remarks/>
        public event UploadInvoiceCmsCSVAutoTrackNoCompletedEventHandler UploadInvoiceCmsCSVAutoTrackNoCompleted;
        
        /// <remarks/>
        public event UploadInvoiceCancellationCmsCSVCompletedEventHandler UploadInvoiceCancellationCmsCSVCompleted;
        
        /// <remarks/>
        public event UploadAllowanceCancellationCmsCSVCompletedEventHandler UploadAllowanceCancellationCmsCSVCompleted;
        
        /// <remarks/>
        public event UploadInvoiceCancellationCompletedEventHandler UploadInvoiceCancellationCompleted;
        
        /// <remarks/>
        public event UploadAllowanceCancellationCompletedEventHandler UploadAllowanceCancellationCompleted;
        
        /// <remarks/>
        public event UploadB0501CompletedEventHandler UploadB0501Completed;
        
        /// <remarks/>
        public event GetUpdatedWelfareAgenciesInfoCompletedEventHandler GetUpdatedWelfareAgenciesInfoCompleted;
        
        /// <remarks/>
        public event GetWelfareAgenciesInfoCompletedEventHandler GetWelfareAgenciesInfoCompleted;
        
        /// <remarks/>
        public event GetIncomingInvoicesCompletedEventHandler GetIncomingInvoicesCompleted;
        
        /// <remarks/>
        public event GetInvoicesMapCompletedEventHandler GetInvoicesMapCompleted;
        
        /// <remarks/>
        public event GetIncomingInvoiceCancellationsCompletedEventHandler GetIncomingInvoiceCancellationsCompleted;
        
        /// <remarks/>
        public event GetIncomingAllowancesCompletedEventHandler GetIncomingAllowancesCompleted;
        
        /// <remarks/>
        public event GetIncomingAllowanceCancellationsCompletedEventHandler GetIncomingAllowanceCancellationsCompleted;
        
        /// <remarks/>
        public event AcknowledgeLivingReportCompletedEventHandler AcknowledgeLivingReportCompleted;
        
        /// <remarks/>
        public event GetIncomingWinningInvoicesCompletedEventHandler GetIncomingWinningInvoicesCompleted;
        
        /// <remarks/>
        public event GetSignerCertificateContentCompletedEventHandler GetSignerCertificateContentCompleted;
        
        /// <remarks/>
        public event GetRegisteredMemberCompletedEventHandler GetRegisteredMemberCompleted;
        
        /// <remarks/>
        public event UploadA0401CompletedEventHandler UploadA0401Completed;
        
        /// <remarks/>
        public event UploadA0201CompletedEventHandler UploadA0201Completed;
        
        /// <remarks/>
        public event UploadA0501CompletedEventHandler UploadA0501Completed;
        
        /// <remarks/>
        public event UploadB0201CompletedEventHandler UploadB0201Completed;
        
        /// <remarks/>
        public event B2CUploadInvoiceCompletedEventHandler B2CUploadInvoiceCompleted;
        
        /// <remarks/>
        public event B2CUploadInvoiceCancellationCompletedEventHandler B2CUploadInvoiceCancellationCompleted;
        
        /// <remarks/>
        public event ReceiveContentAsPDFForSellerCompletedEventHandler ReceiveContentAsPDFForSellerCompleted;
        
        /// <remarks/>
        public event ReceiveContentAsPDFForIssuerCompletedEventHandler ReceiveContentAsPDFForIssuerCompleted;
        
        /// <remarks/>
        public event ReceiveContentAsPDFCompletedEventHandler ReceiveContentAsPDFCompleted;
        
        /// <remarks/>
        public event ReceiveAllowancePDFCompletedEventHandler ReceiveAllowancePDFCompleted;
        
        /// <remarks/>
        public event DeleteTempForReceivePDFCompletedEventHandler DeleteTempForReceivePDFCompleted;
        
        /// <remarks/>
        public event GetInvoiceMailTrackingCompletedEventHandler GetInvoiceMailTrackingCompleted;
        
        /// <remarks/>
        public event GetInvoiceReturnedMailCompletedEventHandler GetInvoiceReturnedMailCompleted;
        
        /// <remarks/>
        public event AlertFailedTransactionCompletedEventHandler AlertFailedTransactionCompleted;
        
        /// <remarks/>
        public event B2BUploadReceiptCompletedEventHandler B2BUploadReceiptCompleted;
        
        /// <remarks/>
        public event B2BUploadReceiptCancellationCompletedEventHandler B2BUploadReceiptCancellationCompleted;
        
        /// <remarks/>
        public event B2BUploadInvoiceCompletedEventHandler B2BUploadInvoiceCompleted;
        
        /// <remarks/>
        public event B2BUploadAllowanceCompletedEventHandler B2BUploadAllowanceCompleted;
        
        /// <remarks/>
        public event B2BUploadAllowanceCancellationCompletedEventHandler B2BUploadAllowanceCancellationCompleted;
        
        /// <remarks/>
        public event B2BUploadInvoiceCancellationCompletedEventHandler B2BUploadInvoiceCancellationCompleted;
        
        /// <remarks/>
        public event B2BUploadBuyerInvoiceCompletedEventHandler B2BUploadBuyerInvoiceCompleted;
        
        /// <remarks/>
        public event UploadBranchTrackBlankCompletedEventHandler UploadBranchTrackBlankCompleted;
        
        /// <remarks/>
        public event AcknowledgeReceivingCompletedEventHandler AcknowledgeReceivingCompleted;
        
        /// <remarks/>
        public event NotifyCounterpartBusinessCompletedEventHandler NotifyCounterpartBusinessCompleted;
        
        /// <remarks/>
        public event B2BReceiveA0501CompletedEventHandler B2BReceiveA0501Completed;
        
        /// <remarks/>
        public event B2BReceiveB0501CompletedEventHandler B2BReceiveB0501Completed;
        
        /// <remarks/>
        public event ReceiveContentAsPDFB2BCompletedEventHandler ReceiveContentAsPDFB2BCompleted;
        
        /// <remarks/>
        public event DeleteTempForReceivePDFB2BCompletedEventHandler DeleteTempForReceivePDFB2BCompleted;
        
        /// <remarks/>
        public event UploadCounterpartBusinessCompletedEventHandler UploadCounterpartBusinessCompleted;
        
        /// <remarks/>
        public event GetServiceInfoCompletedEventHandler GetServiceInfoCompleted;
        
        /// <remarks/>
        public event UploadInvoiceAutoTrackNoByClientCompletedEventHandler UploadInvoiceAutoTrackNoByClientCompleted;
        
        /// <remarks/>
        public event UploadInvoiceByClientCompletedEventHandler UploadInvoiceByClientCompleted;
        
        /// <remarks/>
        public event UploadAllowanceByClientCompletedEventHandler UploadAllowanceByClientCompleted;
        
        /// <remarks/>
        public event UploadInvoiceAutoTrackNoV2CompletedEventHandler UploadInvoiceAutoTrackNoV2Completed;
        
        /// <remarks/>
        public event UploadInvoiceCancellationV2CompletedEventHandler UploadInvoiceCancellationV2Completed;
        
        /// <remarks/>
        public event UploadAllowanceV2CompletedEventHandler UploadAllowanceV2Completed;
        
        /// <remarks/>
        public event UploadAllowanceCancellationV2CompletedEventHandler UploadAllowanceCancellationV2Completed;
        
        /// <remarks/>
        public event UploadInvoiceV2CompletedEventHandler UploadInvoiceV2Completed;
        
        /// <remarks/>
        public event UploadInvoiceCmsCSVAutoTrackNoV2CompletedEventHandler UploadInvoiceCmsCSVAutoTrackNoV2Completed;
        
        /// <remarks/>
        public event UploadAllowanceCmsCSVCompletedEventHandler UploadAllowanceCmsCSVCompleted;
        
        /// <remarks/>
        public event UploadBranchTrackCompletedEventHandler UploadBranchTrackCompleted;
        
        /// <remarks/>
        public event UploadInvoiceV2_C0401CompletedEventHandler UploadInvoiceV2_C0401Completed;
        
        /// <remarks/>
        public event UploadAllowance_D0401CompletedEventHandler UploadAllowance_D0401Completed;
        
        /// <remarks/>
        public event UploadInvoiceCancellationV2_C0501CompletedEventHandler UploadInvoiceCancellationV2_C0501Completed;
        
        /// <remarks/>
        public event UploadAllowanceCancellationV2_D0501CompletedEventHandler UploadAllowanceCancellationV2_D0501Completed;
        
        /// <remarks/>
        public event UploadInvoiceEnterpriseCompletedEventHandler UploadInvoiceEnterpriseCompleted;
        
        /// <remarks/>
        public event GetCurrentYearInvoiceTrackCodeCompletedEventHandler GetCurrentYearInvoiceTrackCodeCompleted;
        
        /// <remarks/>
        public event GetCustomerIdListByAgentCompletedEventHandler GetCustomerIdListByAgentCompleted;
        
        /// <remarks/>
        public event GetVacantInvoiceNoCompletedEventHandler GetVacantInvoiceNoCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.uxb2b.com/UploadInvoiceBuyerCmsCSV", RequestNamespace="http://www.uxb2b.com/", ResponseNamespace="http://www.uxb2b.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode UploadInvoiceBuyerCmsCSV([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] uploadData) {
            object[] results = this.Invoke("UploadInvoiceBuyerCmsCSV", new object[] {
                        uploadData});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void UploadInvoiceBuyerCmsCSVAsync(byte[] uploadData) {
            this.UploadInvoiceBuyerCmsCSVAsync(uploadData, null);
        }
        
        /// <remarks/>
        public void UploadInvoiceBuyerCmsCSVAsync(byte[] uploadData, object userState) {
            if ((this.UploadInvoiceBuyerCmsCSVOperationCompleted == null)) {
                this.UploadInvoiceBuyerCmsCSVOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadInvoiceBuyerCmsCSVOperationCompleted);
            }
            this.InvokeAsync("UploadInvoiceBuyerCmsCSV", new object[] {
                        uploadData}, this.UploadInvoiceBuyerCmsCSVOperationCompleted, userState);
        }
        
        private void OnUploadInvoiceBuyerCmsCSVOperationCompleted(object arg) {
            if ((this.UploadInvoiceBuyerCmsCSVCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadInvoiceBuyerCmsCSVCompleted(this, new UploadInvoiceBuyerCmsCSVCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.uxb2b.com/UploadInvoiceCmsCSV", RequestNamespace="http://www.uxb2b.com/", ResponseNamespace="http://www.uxb2b.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode UploadInvoiceCmsCSV([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] uploadData) {
            object[] results = this.Invoke("UploadInvoiceCmsCSV", new object[] {
                        uploadData});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void UploadInvoiceCmsCSVAsync(byte[] uploadData) {
            this.UploadInvoiceCmsCSVAsync(uploadData, null);
        }
        
        /// <remarks/>
        public void UploadInvoiceCmsCSVAsync(byte[] uploadData, object userState) {
            if ((this.UploadInvoiceCmsCSVOperationCompleted == null)) {
                this.UploadInvoiceCmsCSVOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadInvoiceCmsCSVOperationCompleted);
            }
            this.InvokeAsync("UploadInvoiceCmsCSV", new object[] {
                        uploadData}, this.UploadInvoiceCmsCSVOperationCompleted, userState);
        }
        
        private void OnUploadInvoiceCmsCSVOperationCompleted(object arg) {
            if ((this.UploadInvoiceCmsCSVCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadInvoiceCmsCSVCompleted(this, new UploadInvoiceCmsCSVCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.uxb2b.com/UploadInvoice", RequestNamespace="http://www.uxb2b.com/", ResponseNamespace="http://www.uxb2b.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode UploadInvoice(System.Xml.XmlNode uploadData) {
            object[] results = this.Invoke("UploadInvoice", new object[] {
                        uploadData});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void UploadInvoiceAsync(System.Xml.XmlNode uploadData) {
            this.UploadInvoiceAsync(uploadData, null);
        }
        
        /// <remarks/>
        public void UploadInvoiceAsync(System.Xml.XmlNode uploadData, object userState) {
            if ((this.UploadInvoiceOperationCompleted == null)) {
                this.UploadInvoiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadInvoiceOperationCompleted);
            }
            this.InvokeAsync("UploadInvoice", new object[] {
                        uploadData}, this.UploadInvoiceOperationCompleted, userState);
        }
        
        private void OnUploadInvoiceOperationCompleted(object arg) {
            if ((this.UploadInvoiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadInvoiceCompleted(this, new UploadInvoiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.uxb2b.com/UploadAllowance", RequestNamespace="http://www.uxb2b.com/", ResponseNamespace="http://www.uxb2b.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode UploadAllowance(System.Xml.XmlNode uploadData) {
            object[] results = this.Invoke("UploadAllowance", new object[] {
                        uploadData});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void UploadAllowanceAsync(System.Xml.XmlNode uploadData) {
            this.UploadAllowanceAsync(uploadData, null);
        }
        
        /// <remarks/>
        public void UploadAllowanceAsync(System.Xml.XmlNode uploadData, object userState) {
            if ((this.UploadAllowanceOperationCompleted == null)) {
                this.UploadAllowanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadAllowanceOperationCompleted);
            }
            this.InvokeAsync("UploadAllowance", new object[] {
                        uploadData}, this.UploadAllowanceOperationCompleted, userState);
        }
        
        private void OnUploadAllowanceOperationCompleted(object arg) {
            if ((this.UploadAllowanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadAllowanceCompleted(this, new UploadAllowanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.uxb2b.com/UploadB0401", RequestNamespace="http://www.uxb2b.com/", ResponseNamespace="http://www.uxb2b.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode UploadB0401(System.Xml.XmlNode uploadData) {
            object[] results = this.Invoke("UploadB0401", new object[] {
                        uploadData});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void UploadB0401Async(System.Xml.XmlNode uploadData) {
            this.UploadB0401Async(uploadData, null);
        }
        
        /// <remarks/>
        public void UploadB0401Async(System.Xml.XmlNode uploadData, object userState) {
            if ((this.UploadB0401OperationCompleted == null)) {
                this.UploadB0401OperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadB0401OperationCompleted);
            }
            this.InvokeAsync("UploadB0401", new object[] {
                        uploadData}, this.UploadB0401OperationCompleted, userState);
        }
        
        private void OnUploadB0401OperationCompleted(object arg) {
            if ((this.UploadB0401Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadB0401Completed(this, new UploadB0401CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.uxb2b.com/UploadInvoiceAutoTrackNo", RequestNamespace="http://www.uxb2b.com/", ResponseNamespace="http://www.uxb2b.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode UploadInvoiceAutoTrackNo(System.Xml.XmlNode uploadData) {
            object[] results = this.Invoke("UploadInvoiceAutoTrackNo", new object[] {
                        uploadData});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void UploadInvoiceAutoTrackNoAsync(System.Xml.XmlNode uploadData) {
            this.UploadInvoiceAutoTrackNoAsync(uploadData, null);
        }
        
        /// <remarks/>
        public void UploadInvoiceAutoTrackNoAsync(System.Xml.XmlNode uploadData, object userState) {
            if ((this.UploadInvoiceAutoTrackNoOperationCompleted == null)) {
                this.UploadInvoiceAutoTrackNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadInvoiceAutoTrackNoOperationCompleted);
            }
            this.InvokeAsync("UploadInvoiceAutoTrackNo", new object[] {
                        uploadData}, this.UploadInvoiceAutoTrackNoOperationCompleted, userState);
        }
        
        private void OnUploadInvoiceAutoTrackNoOperationCompleted(object arg) {
            if ((this.UploadInvoiceAutoTrackNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadInvoiceAutoTrackNoCompleted(this, new UploadInvoiceAutoTrackNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.uxb2b.com/UploadInvoiceCmsCSVAutoTrackNo", RequestNamespace="http://www.uxb2b.com/", ResponseNamespace="http://www.uxb2b.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode UploadInvoiceCmsCSVAutoTrackNo([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] uploadData) {
            object[] results = this.Invoke("UploadInvoiceCmsCSVAutoTrackNo", new object[] {
                        uploadData});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void UploadInvoiceCmsCSVAutoTrackNoAsync(byte[] uploadData) {
            this.UploadInvoiceCmsCSVAutoTrackNoAsync(uploadData, null);
        }
        
        /// <remarks/>
        public void UploadInvoiceCmsCSVAutoTrackNoAsync(byte[] uploadData, object userState) {
            if ((this.UploadInvoiceCmsCSVAutoTrackNoOperationCompleted == null)) {
                this.UploadInvoiceCmsCSVAutoTrackNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadInvoiceCmsCSVAutoTrackNoOperationCompleted);
            }
            this.InvokeAsync("UploadInvoiceCmsCSVAutoTrackNo", new object[] {
                        uploadData}, this.UploadInvoiceCmsCSVAutoTrackNoOperationCompleted, userState);
        }
        
        private void OnUploadInvoiceCmsCSVAutoTrackNoOperationCompleted(object arg) {
            if ((this.UploadInvoiceCmsCSVAutoTrackNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadInvoiceCmsCSVAutoTrackNoCompleted(this, new UploadInvoiceCmsCSVAutoTrackNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.uxb2b.com/UploadInvoiceCancellationCmsCSV", RequestNamespace="http://www.uxb2b.com/", ResponseNamespace="http://www.uxb2b.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode UploadInvoiceCancellationCmsCSV([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] uploadData) {
            object[] results = this.Invoke("UploadInvoiceCancellationCmsCSV", new object[] {
                        uploadData});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void UploadInvoiceCancellationCmsCSVAsync(byte[] uploadData) {
            this.UploadInvoiceCancellationCmsCSVAsync(uploadData, null);
        }
        
        /// <remarks/>
        public void UploadInvoiceCancellationCmsCSVAsync(byte[] uploadData, object userState) {
            if ((this.UploadInvoiceCancellationCmsCSVOperationCompleted == null)) {
                this.UploadInvoiceCancellationCmsCSVOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadInvoiceCancellationCmsCSVOperationCompleted);
            }
            this.InvokeAsync("UploadInvoiceCancellationCmsCSV", new object[] {
                        uploadData}, this.UploadInvoiceCancellationCmsCSVOperationCompleted, userState);
        }
        
        private void OnUploadInvoiceCancellationCmsCSVOperationCompleted(object arg) {
            if ((this.UploadInvoiceCancellationCmsCSVCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadInvoiceCancellationCmsCSVCompleted(this, new UploadInvoiceCancellationCmsCSVCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.uxb2b.com/UploadAllowanceCancellationCmsCSV", RequestNamespace="http://www.uxb2b.com/", ResponseNamespace="http://www.uxb2b.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode UploadAllowanceCancellationCmsCSV([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] uploadData) {
            object[] results = this.Invoke("UploadAllowanceCancellationCmsCSV", new object[] {
                        uploadData});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void UploadAllowanceCancellationCmsCSVAsync(byte[] uploadData) {
            this.UploadAllowanceCancellationCmsCSVAsync(uploadData, null);
        }
        
        /// <remarks/>
        public void UploadAllowanceCancellationCmsCSVAsync(byte[] uploadData, object userState) {
            if ((this.UploadAllowanceCancellationCmsCSVOperationCompleted == null)) {
                this.UploadAllowanceCancellationCmsCSVOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadAllowanceCancellationCmsCSVOperationCompleted);
            }
            this.InvokeAsync("UploadAllowanceCancellationCmsCSV", new object[] {
                        uploadData}, this.UploadAllowanceCancellationCmsCSVOperationCompleted, userState);
        }
        
        private void OnUploadAllowanceCancellationCmsCSVOperationCompleted(object arg) {
            if ((this.UploadAllowanceCancellationCmsCSVCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadAllowanceCancellationCmsCSVCompleted(this, new UploadAllowanceCancellationCmsCSVCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.uxb2b.com/UploadInvoiceCancellation", RequestNamespace="http://www.uxb2b.com/", ResponseNamespace="http://www.uxb2b.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode UploadInvoiceCancellation(System.Xml.XmlNode uploadData) {
            object[] results = this.Invoke("UploadInvoiceCancellation", new object[] {
                        uploadData});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void UploadInvoiceCancellationAsync(System.Xml.XmlNode uploadData) {
            this.UploadInvoiceCancellationAsync(uploadData, null);
        }
        
        /// <remarks/>
        public void UploadInvoiceCancellationAsync(System.Xml.XmlNode uploadData, object userState) {
            if ((this.UploadInvoiceCancellationOperationCompleted == null)) {
                this.UploadInvoiceCancellationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadInvoiceCancellationOperationCompleted);
            }
            this.InvokeAsync("UploadInvoiceCancellation", new object[] {
                        uploadData}, this.UploadInvoiceCancellationOperationCompleted, userState);
        }
        
        private void OnUploadInvoiceCancellationOperationCompleted(object arg) {
            if ((this.UploadInvoiceCancellationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadInvoiceCancellationCompleted(this, new UploadInvoiceCancellationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.uxb2b.com/UploadAllowanceCancellation", RequestNamespace="http://www.uxb2b.com/", ResponseNamespace="http://www.uxb2b.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode UploadAllowanceCancellation(System.Xml.XmlNode uploadData) {
            object[] results = this.Invoke("UploadAllowanceCancellation", new object[] {
                        uploadData});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void UploadAllowanceCancellationAsync(System.Xml.XmlNode uploadData) {
            this.UploadAllowanceCancellationAsync(uploadData, null);
        }
        
        /// <remarks/>
        public void UploadAllowanceCancellationAsync(System.Xml.XmlNode uploadData, object userState) {
            if ((this.UploadAllowanceCancellationOperationCompleted == null)) {
                this.UploadAllowanceCancellationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadAllowanceCancellationOperationCompleted);
            }
            this.InvokeAsync("UploadAllowanceCancellation", new object[] {
                        uploadData}, this.UploadAllowanceCancellationOperationCompleted, userState);
        }
        
        private void OnUploadAllowanceCancellationOperationCompleted(object arg) {
            if ((this.UploadAllowanceCancellationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadAllowanceCancellationCompleted(this, new UploadAllowanceCancellationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.uxb2b.com/UploadB0501", RequestNamespace="http://www.uxb2b.com/", ResponseNamespace="http://www.uxb2b.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode UploadB0501(System.Xml.XmlNode uploadData) {
            object[] results = this.Invoke("UploadB0501", new object[] {
                        uploadData});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void UploadB0501Async(System.Xml.XmlNode uploadData) {
            this.UploadB0501Async(uploadData, null);
        }
        
        /// <remarks/>
        public void UploadB0501Async(System.Xml.XmlNode uploadData, object userState) {
            if ((this.UploadB0501OperationCompleted == null)) {
                this.UploadB0501OperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadB0501OperationCompleted);
            }
            this.InvokeAsync("UploadB0501", new object[] {
                        uploadData}, this.UploadB0501OperationCompleted, userState);
        }
        
        private void OnUploadB0501OperationCompleted(object arg) {
            if ((this.UploadB0501Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadB0501Completed(this, new UploadB0501CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.uxb2b.com/GetUpdatedWelfareAgenciesInfo", RequestNamespace="http://www.uxb2b.com/", ResponseNamespace="http://www.uxb2b.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetUpdatedWelfareAgenciesInfo(string sellerReceiptNo) {
            object[] results = this.Invoke("GetUpdatedWelfareAgenciesInfo", new object[] {
                        sellerReceiptNo});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetUpdatedWelfareAgenciesInfoAsync(string sellerReceiptNo) {
            this.GetUpdatedWelfareAgenciesInfoAsync(sellerReceiptNo, null);
        }
        
        /// <remarks/>
        public void GetUpdatedWelfareAgenciesInfoAsync(string sellerReceiptNo, object userState) {
            if ((this.GetUpdatedWelfareAgenciesInfoOperationCompleted == null)) {
                this.GetUpdatedWelfareAgenciesInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUpdatedWelfareAgenciesInfoOperationCompleted);
            }
            this.InvokeAsync("GetUpdatedWelfareAgenciesInfo", new object[] {
                        sellerReceiptNo}, this.GetUpdatedWelfareAgenciesInfoOperationCompleted, userState);
        }
        
        private void OnGetUpdatedWelfareAgenciesInfoOperationCompleted(object arg) {
            if ((this.GetUpdatedWelfareAgenciesInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUpdatedWelfareAgenciesInfoCompleted(this, new GetUpdatedWelfareAgenciesInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.uxb2b.com/GetWelfareAgenciesInfo", RequestNamespace="http://www.uxb2b.com/", ResponseNamespace="http://www.uxb2b.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetWelfareAgenciesInfo(string sellerReceiptNo) {
            object[] results = this.Invoke("GetWelfareAgenciesInfo", new object[] {
                        sellerReceiptNo});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetWelfareAgenciesInfoAsync(string sellerReceiptNo) {
            this.GetWelfareAgenciesInfoAsync(sellerReceiptNo, null);
        }
        
        /// <remarks/>
        public void GetWelfareAgenciesInfoAsync(string sellerReceiptNo, object userState) {
            if ((this.GetWelfareAgenciesInfoOperationCompleted == null)) {
                this.GetWelfareAgenciesInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWelfareAgenciesInfoOperationCompleted);
            }
            this.InvokeAsync("GetWelfareAgenciesInfo", new object[] {
                        sellerReceiptNo}, this.GetWelfareAgenciesInfoOperationCompleted, userState);
        }
        
        private void OnGetWelfareAgenciesInfoOperationCompleted(object arg) {
            if ((this.GetWelfareAgenciesInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWelfareAgenciesInfoCompleted(this, new GetWelfareAgenciesInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.uxb2b.com/GetIncomingInvoices", RequestNamespace="http://www.uxb2b.com/", ResponseNamespace="http://www.uxb2b.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetIncomingInvoices(System.Xml.XmlNode sellerInfo) {
            object[] results = this.Invoke("GetIncomingInvoices", new object[] {
                        sellerInfo});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetIncomingInvoicesAsync(System.Xml.XmlNode sellerInfo) {
            this.GetIncomingInvoicesAsync(sellerInfo, null);
        }
        
        /// <remarks/>
        public void GetIncomingInvoicesAsync(System.Xml.XmlNode sellerInfo, object userState) {
            if ((this.GetIncomingInvoicesOperationCompleted == null)) {
                this.GetIncomingInvoicesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetIncomingInvoicesOperationCompleted);
            }
            this.InvokeAsync("GetIncomingInvoices", new object[] {
                        sellerInfo}, this.GetIncomingInvoicesOperationCompleted, userState);
        }
        
        private void OnGetIncomingInvoicesOperationCompleted(object arg) {
            if ((this.GetIncomingInvoicesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetIncomingInvoicesCompleted(this, new GetIncomingInvoicesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.uxb2b.com/GetInvoicesMap", RequestNamespace="http://www.uxb2b.com/", ResponseNamespace="http://www.uxb2b.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetInvoicesMap(System.Xml.XmlNode sellerInfo) {
            object[] results = this.Invoke("GetInvoicesMap", new object[] {
                        sellerInfo});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetInvoicesMapAsync(System.Xml.XmlNode sellerInfo) {
            this.GetInvoicesMapAsync(sellerInfo, null);
        }
        
        /// <remarks/>
        public void GetInvoicesMapAsync(System.Xml.XmlNode sellerInfo, object userState) {
            if ((this.GetInvoicesMapOperationCompleted == null)) {
                this.GetInvoicesMapOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInvoicesMapOperationCompleted);
            }
            this.InvokeAsync("GetInvoicesMap", new object[] {
                        sellerInfo}, this.GetInvoicesMapOperationCompleted, userState);
        }
        
        private void OnGetInvoicesMapOperationCompleted(object arg) {
            if ((this.GetInvoicesMapCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInvoicesMapCompleted(this, new GetInvoicesMapCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.uxb2b.com/GetIncomingInvoiceCancellations", RequestNamespace="http://www.uxb2b.com/", ResponseNamespace="http://www.uxb2b.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetIncomingInvoiceCancellations(System.Xml.XmlNode sellerInfo) {
            object[] results = this.Invoke("GetIncomingInvoiceCancellations", new object[] {
                        sellerInfo});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetIncomingInvoiceCancellationsAsync(System.Xml.XmlNode sellerInfo) {
            this.GetIncomingInvoiceCancellationsAsync(sellerInfo, null);
        }
        
        /// <remarks/>
        public void GetIncomingInvoiceCancellationsAsync(System.Xml.XmlNode sellerInfo, object userState) {
            if ((this.GetIncomingInvoiceCancellationsOperationCompleted == null)) {
                this.GetIncomingInvoiceCancellationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetIncomingInvoiceCancellationsOperationCompleted);
            }
            this.InvokeAsync("GetIncomingInvoiceCancellations", new object[] {
                        sellerInfo}, this.GetIncomingInvoiceCancellationsOperationCompleted, userState);
        }
        
        private void OnGetIncomingInvoiceCancellationsOperationCompleted(object arg) {
            if ((this.GetIncomingInvoiceCancellationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetIncomingInvoiceCancellationsCompleted(this, new GetIncomingInvoiceCancellationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.uxb2b.com/GetIncomingAllowances", RequestNamespace="http://www.uxb2b.com/", ResponseNamespace="http://www.uxb2b.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetIncomingAllowances(System.Xml.XmlNode sellerInfo) {
            object[] results = this.Invoke("GetIncomingAllowances", new object[] {
                        sellerInfo});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetIncomingAllowancesAsync(System.Xml.XmlNode sellerInfo) {
            this.GetIncomingAllowancesAsync(sellerInfo, null);
        }
        
        /// <remarks/>
        public void GetIncomingAllowancesAsync(System.Xml.XmlNode sellerInfo, object userState) {
            if ((this.GetIncomingAllowancesOperationCompleted == null)) {
                this.GetIncomingAllowancesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetIncomingAllowancesOperationCompleted);
            }
            this.InvokeAsync("GetIncomingAllowances", new object[] {
                        sellerInfo}, this.GetIncomingAllowancesOperationCompleted, userState);
        }
        
        private void OnGetIncomingAllowancesOperationCompleted(object arg) {
            if ((this.GetIncomingAllowancesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetIncomingAllowancesCompleted(this, new GetIncomingAllowancesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.uxb2b.com/GetIncomingAllowanceCancellations", RequestNamespace="http://www.uxb2b.com/", ResponseNamespace="http://www.uxb2b.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetIncomingAllowanceCancellations(System.Xml.XmlNode sellerInfo) {
            object[] results = this.Invoke("GetIncomingAllowanceCancellations", new object[] {
                        sellerInfo});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetIncomingAllowanceCancellationsAsync(System.Xml.XmlNode sellerInfo) {
            this.GetIncomingAllowanceCancellationsAsync(sellerInfo, null);
        }
        
        /// <remarks/>
        public void GetIncomingAllowanceCancellationsAsync(System.Xml.XmlNode sellerInfo, object userState) {
            if ((this.GetIncomingAllowanceCancellationsOperationCompleted == null)) {
                this.GetIncomingAllowanceCancellationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetIncomingAllowanceCancellationsOperationCompleted);
            }
            this.InvokeAsync("GetIncomingAllowanceCancellations", new object[] {
                        sellerInfo}, this.GetIncomingAllowanceCancellationsOperationCompleted, userState);
        }
        
        private void OnGetIncomingAllowanceCancellationsOperationCompleted(object arg) {
            if ((this.GetIncomingAllowanceCancellationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetIncomingAllowanceCancellationsCompleted(this, new GetIncomingAllowanceCancellationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.uxb2b.com/AcknowledgeLivingReport", RequestNamespace="http://www.uxb2b.com/", ResponseNamespace="http://www.uxb2b.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AcknowledgeLivingReport(System.Xml.XmlNode sellerInfo) {
            this.Invoke("AcknowledgeLivingReport", new object[] {
                        sellerInfo});
        }
        
        /// <remarks/>
        public void AcknowledgeLivingReportAsync(System.Xml.XmlNode sellerInfo) {
            this.AcknowledgeLivingReportAsync(sellerInfo, null);
        }
        
        /// <remarks/>
        public void AcknowledgeLivingReportAsync(System.Xml.XmlNode sellerInfo, object userState) {
            if ((this.AcknowledgeLivingReportOperationCompleted == null)) {
                this.AcknowledgeLivingReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAcknowledgeLivingReportOperationCompleted);
            }
            this.InvokeAsync("AcknowledgeLivingReport", new object[] {
                        sellerInfo}, this.AcknowledgeLivingReportOperationCompleted, userState);
        }
        
        private void OnAcknowledgeLivingReportOperationCompleted(object arg) {
            if ((this.AcknowledgeLivingReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AcknowledgeLivingReportCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.uxb2b.com/GetIncomingWinningInvoices", RequestNamespace="http://www.uxb2b.com/", ResponseNamespace="http://www.uxb2b.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetIncomingWinningInvoices(System.Xml.XmlNode sellerInfo) {
            object[] results = this.Invoke("GetIncomingWinningInvoices", new object[] {
                        sellerInfo});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetIncomingWinningInvoicesAsync(System.Xml.XmlNode sellerInfo) {
            this.GetIncomingWinningInvoicesAsync(sellerInfo, null);
        }
        
        /// <remarks/>
        public void GetIncomingWinningInvoicesAsync(System.Xml.XmlNode sellerInfo, object userState) {
            if ((this.GetIncomingWinningInvoicesOperationCompleted == null)) {
                this.GetIncomingWinningInvoicesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetIncomingWinningInvoicesOperationCompleted);
            }
            this.InvokeAsync("GetIncomingWinningInvoices", new object[] {
                        sellerInfo}, this.GetIncomingWinningInvoicesOperationCompleted, userState);
        }
        
        private void OnGetIncomingWinningInvoicesOperationCompleted(object arg) {
            if ((this.GetIncomingWinningInvoicesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetIncomingWinningInvoicesCompleted(this, new GetIncomingWinningInvoicesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.uxb2b.com/GetSignerCertificateContent", RequestNamespace="http://www.uxb2b.com/", ResponseNamespace="http://www.uxb2b.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSignerCertificateContent(string activationKey) {
            object[] results = this.Invoke("GetSignerCertificateContent", new object[] {
                        activationKey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSignerCertificateContentAsync(string activationKey) {
            this.GetSignerCertificateContentAsync(activationKey, null);
        }
        
        /// <remarks/>
        public void GetSignerCertificateContentAsync(string activationKey, object userState) {
            if ((this.GetSignerCertificateContentOperationCompleted == null)) {
                this.GetSignerCertificateContentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSignerCertificateContentOperationCompleted);
            }
            this.InvokeAsync("GetSignerCertificateContent", new object[] {
                        activationKey}, this.GetSignerCertificateContentOperationCompleted, userState);
        }
        
        private void OnGetSignerCertificateContentOperationCompleted(object arg) {
            if ((this.GetSignerCertificateContentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSignerCertificateContentCompleted(this, new GetSignerCertificateContentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.uxb2b.com/GetRegisteredMember", RequestNamespace="http://www.uxb2b.com/", ResponseNamespace="http://www.uxb2b.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetRegisteredMember(System.Xml.XmlNode sellerInfo) {
            object[] results = this.Invoke("GetRegisteredMember", new object[] {
                        sellerInfo});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetRegisteredMemberAsync(System.Xml.XmlNode sellerInfo) {
            this.GetRegisteredMemberAsync(sellerInfo, null);
        }
        
        /// <remarks/>
        public void GetRegisteredMemberAsync(System.Xml.XmlNode sellerInfo, object userState) {
            if ((this.GetRegisteredMemberOperationCompleted == null)) {
                this.GetRegisteredMemberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRegisteredMemberOperationCompleted);
            }
            this.InvokeAsync("GetRegisteredMember", new object[] {
                        sellerInfo}, this.GetRegisteredMemberOperationCompleted, userState);
        }
        
        private void OnGetRegisteredMemberOperationCompleted(object arg) {
            if ((this.GetRegisteredMemberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRegisteredMemberCompleted(this, new GetRegisteredMemberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.uxb2b.com/UploadA0401", RequestNamespace="http://www.uxb2b.com/", ResponseNamespace="http://www.uxb2b.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode UploadA0401(System.Xml.XmlNode uploadData) {
            object[] results = this.Invoke("UploadA0401", new object[] {
                        uploadData});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void UploadA0401Async(System.Xml.XmlNode uploadData) {
            this.UploadA0401Async(uploadData, null);
        }
        
        /// <remarks/>
        public void UploadA0401Async(System.Xml.XmlNode uploadData, object userState) {
            if ((this.UploadA0401OperationCompleted == null)) {
                this.UploadA0401OperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadA0401OperationCompleted);
            }
            this.InvokeAsync("UploadA0401", new object[] {
                        uploadData}, this.UploadA0401OperationCompleted, userState);
        }
        
        private void OnUploadA0401OperationCompleted(object arg) {
            if ((this.UploadA0401Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadA0401Completed(this, new UploadA0401CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.uxb2b.com/UploadA0201", RequestNamespace="http://www.uxb2b.com/", ResponseNamespace="http://www.uxb2b.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode UploadA0201(System.Xml.XmlNode uploadData) {
            object[] results = this.Invoke("UploadA0201", new object[] {
                        uploadData});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void UploadA0201Async(System.Xml.XmlNode uploadData) {
            this.UploadA0201Async(uploadData, null);
        }
        
        /// <remarks/>
        public void UploadA0201Async(System.Xml.XmlNode uploadData, object userState) {
            if ((this.UploadA0201OperationCompleted == null)) {
                this.UploadA0201OperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadA0201OperationCompleted);
            }
            this.InvokeAsync("UploadA0201", new object[] {
                        uploadData}, this.UploadA0201OperationCompleted, userState);
        }
        
        private void OnUploadA0201OperationCompleted(object arg) {
            if ((this.UploadA0201Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadA0201Completed(this, new UploadA0201CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.uxb2b.com/UploadA0501", RequestNamespace="http://www.uxb2b.com/", ResponseNamespace="http://www.uxb2b.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode UploadA0501(System.Xml.XmlNode uploadData) {
            object[] results = this.Invoke("UploadA0501", new object[] {
                        uploadData});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void UploadA0501Async(System.Xml.XmlNode uploadData) {
            this.UploadA0501Async(uploadData, null);
        }
        
        /// <remarks/>
        public void UploadA0501Async(System.Xml.XmlNode uploadData, object userState) {
            if ((this.UploadA0501OperationCompleted == null)) {
                this.UploadA0501OperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadA0501OperationCompleted);
            }
            this.InvokeAsync("UploadA0501", new object[] {
                        uploadData}, this.UploadA0501OperationCompleted, userState);
        }
        
        private void OnUploadA0501OperationCompleted(object arg) {
            if ((this.UploadA0501Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadA0501Completed(this, new UploadA0501CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.uxb2b.com/UploadB0201", RequestNamespace="http://www.uxb2b.com/", ResponseNamespace="http://www.uxb2b.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode UploadB0201(System.Xml.XmlNode uploadData) {
            object[] results = this.Invoke("UploadB0201", new object[] {
                        uploadData});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void UploadB0201Async(System.Xml.XmlNode uploadData) {
            this.UploadB0201Async(uploadData, null);
        }
        
        /// <remarks/>
        public void UploadB0201Async(System.Xml.XmlNode uploadData, object userState) {
            if ((this.UploadB0201OperationCompleted == null)) {
                this.UploadB0201OperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadB0201OperationCompleted);
            }
            this.InvokeAsync("UploadB0201", new object[] {
                        uploadData}, this.UploadB0201OperationCompleted, userState);
        }
        
        private void OnUploadB0201OperationCompleted(object arg) {
            if ((this.UploadB0201Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadB0201Completed(this, new UploadB0201CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.uxb2b.com/B2CUploadInvoice", RequestNamespace="http://www.uxb2b.com/", ResponseNamespace="http://www.uxb2b.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode B2CUploadInvoice(System.Xml.XmlNode uploadData) {
            object[] results = this.Invoke("B2CUploadInvoice", new object[] {
                        uploadData});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void B2CUploadInvoiceAsync(System.Xml.XmlNode uploadData) {
            this.B2CUploadInvoiceAsync(uploadData, null);
        }
        
        /// <remarks/>
        public void B2CUploadInvoiceAsync(System.Xml.XmlNode uploadData, object userState) {
            if ((this.B2CUploadInvoiceOperationCompleted == null)) {
                this.B2CUploadInvoiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnB2CUploadInvoiceOperationCompleted);
            }
            this.InvokeAsync("B2CUploadInvoice", new object[] {
                        uploadData}, this.B2CUploadInvoiceOperationCompleted, userState);
        }
        
        private void OnB2CUploadInvoiceOperationCompleted(object arg) {
            if ((this.B2CUploadInvoiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.B2CUploadInvoiceCompleted(this, new B2CUploadInvoiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.uxb2b.com/B2CUploadInvoiceCancellation", RequestNamespace="http://www.uxb2b.com/", ResponseNamespace="http://www.uxb2b.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode B2CUploadInvoiceCancellation(System.Xml.XmlNode uploadData) {
            object[] results = this.Invoke("B2CUploadInvoiceCancellation", new object[] {
                        uploadData});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void B2CUploadInvoiceCancellationAsync(System.Xml.XmlNode uploadData) {
            this.B2CUploadInvoiceCancellationAsync(uploadData, null);
        }
        
        /// <remarks/>
        public void B2CUploadInvoiceCancellationAsync(System.Xml.XmlNode uploadData, object userState) {
            if ((this.B2CUploadInvoiceCancellationOperationCompleted == null)) {
                this.B2CUploadInvoiceCancellationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnB2CUploadInvoiceCancellationOperationCompleted);
            }
            this.InvokeAsync("B2CUploadInvoiceCancellation", new object[] {
                        uploadData}, this.B2CUploadInvoiceCancellationOperationCompleted, userState);
        }
        
        private void OnB2CUploadInvoiceCancellationOperationCompleted(object arg) {
            if ((this.B2CUploadInvoiceCancellationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.B2CUploadInvoiceCancellationCompleted(this, new B2CUploadInvoiceCancellationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.uxb2b.com/ReceiveContentAsPDFForSeller", RequestNamespace="http://www.uxb2b.com/", ResponseNamespace="http://www.uxb2b.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] ReceiveContentAsPDFForSeller(System.Xml.XmlNode sellerInfo, string clientID) {
            object[] results = this.Invoke("ReceiveContentAsPDFForSeller", new object[] {
                        sellerInfo,
                        clientID});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void ReceiveContentAsPDFForSellerAsync(System.Xml.XmlNode sellerInfo, string clientID) {
            this.ReceiveContentAsPDFForSellerAsync(sellerInfo, clientID, null);
        }
        
        /// <remarks/>
        public void ReceiveContentAsPDFForSellerAsync(System.Xml.XmlNode sellerInfo, string clientID, object userState) {
            if ((this.ReceiveContentAsPDFForSellerOperationCompleted == null)) {
                this.ReceiveContentAsPDFForSellerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReceiveContentAsPDFForSellerOperationCompleted);
            }
            this.InvokeAsync("ReceiveContentAsPDFForSeller", new object[] {
                        sellerInfo,
                        clientID}, this.ReceiveContentAsPDFForSellerOperationCompleted, userState);
        }
        
        private void OnReceiveContentAsPDFForSellerOperationCompleted(object arg) {
            if ((this.ReceiveContentAsPDFForSellerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReceiveContentAsPDFForSellerCompleted(this, new ReceiveContentAsPDFForSellerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.uxb2b.com/ReceiveContentAsPDFForIssuer", RequestNamespace="http://www.uxb2b.com/", ResponseNamespace="http://www.uxb2b.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] ReceiveContentAsPDFForIssuer(System.Xml.XmlNode sellerInfo, string clientID) {
            object[] results = this.Invoke("ReceiveContentAsPDFForIssuer", new object[] {
                        sellerInfo,
                        clientID});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void ReceiveContentAsPDFForIssuerAsync(System.Xml.XmlNode sellerInfo, string clientID) {
            this.ReceiveContentAsPDFForIssuerAsync(sellerInfo, clientID, null);
        }
        
        /// <remarks/>
        public void ReceiveContentAsPDFForIssuerAsync(System.Xml.XmlNode sellerInfo, string clientID, object userState) {
            if ((this.ReceiveContentAsPDFForIssuerOperationCompleted == null)) {
                this.ReceiveContentAsPDFForIssuerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReceiveContentAsPDFForIssuerOperationCompleted);
            }
            this.InvokeAsync("ReceiveContentAsPDFForIssuer", new object[] {
                        sellerInfo,
                        clientID}, this.ReceiveContentAsPDFForIssuerOperationCompleted, userState);
        }
        
        private void OnReceiveContentAsPDFForIssuerOperationCompleted(object arg) {
            if ((this.ReceiveContentAsPDFForIssuerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReceiveContentAsPDFForIssuerCompleted(this, new ReceiveContentAsPDFForIssuerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.uxb2b.com/ReceiveContentAsPDF", RequestNamespace="http://www.uxb2b.com/", ResponseNamespace="http://www.uxb2b.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] ReceiveContentAsPDF(System.Xml.XmlNode sellerInfo, string clientID) {
            object[] results = this.Invoke("ReceiveContentAsPDF", new object[] {
                        sellerInfo,
                        clientID});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void ReceiveContentAsPDFAsync(System.Xml.XmlNode sellerInfo, string clientID) {
            this.ReceiveContentAsPDFAsync(sellerInfo, clientID, null);
        }
        
        /// <remarks/>
        public void ReceiveContentAsPDFAsync(System.Xml.XmlNode sellerInfo, string clientID, object userState) {
            if ((this.ReceiveContentAsPDFOperationCompleted == null)) {
                this.ReceiveContentAsPDFOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReceiveContentAsPDFOperationCompleted);
            }
            this.InvokeAsync("ReceiveContentAsPDF", new object[] {
                        sellerInfo,
                        clientID}, this.ReceiveContentAsPDFOperationCompleted, userState);
        }
        
        private void OnReceiveContentAsPDFOperationCompleted(object arg) {
            if ((this.ReceiveContentAsPDFCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReceiveContentAsPDFCompleted(this, new ReceiveContentAsPDFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.uxb2b.com/ReceiveAllowancePDF", RequestNamespace="http://www.uxb2b.com/", ResponseNamespace="http://www.uxb2b.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] ReceiveAllowancePDF(System.Xml.XmlNode sellerInfo, string clientID) {
            object[] results = this.Invoke("ReceiveAllowancePDF", new object[] {
                        sellerInfo,
                        clientID});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void ReceiveAllowancePDFAsync(System.Xml.XmlNode sellerInfo, string clientID) {
            this.ReceiveAllowancePDFAsync(sellerInfo, clientID, null);
        }
        
        /// <remarks/>
        public void ReceiveAllowancePDFAsync(System.Xml.XmlNode sellerInfo, string clientID, object userState) {
            if ((this.ReceiveAllowancePDFOperationCompleted == null)) {
                this.ReceiveAllowancePDFOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReceiveAllowancePDFOperationCompleted);
            }
            this.InvokeAsync("ReceiveAllowancePDF", new object[] {
                        sellerInfo,
                        clientID}, this.ReceiveAllowancePDFOperationCompleted, userState);
        }
        
        private void OnReceiveAllowancePDFOperationCompleted(object arg) {
            if ((this.ReceiveAllowancePDFCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReceiveAllowancePDFCompleted(this, new ReceiveAllowancePDFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.uxb2b.com/DeleteTempForReceivePDF", RequestNamespace="http://www.uxb2b.com/", ResponseNamespace="http://www.uxb2b.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteTempForReceivePDF(System.Xml.XmlNode sellerInfo, string PdfFile) {
            object[] results = this.Invoke("DeleteTempForReceivePDF", new object[] {
                        sellerInfo,
                        PdfFile});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteTempForReceivePDFAsync(System.Xml.XmlNode sellerInfo, string PdfFile) {
            this.DeleteTempForReceivePDFAsync(sellerInfo, PdfFile, null);
        }
        
        /// <remarks/>
        public void DeleteTempForReceivePDFAsync(System.Xml.XmlNode sellerInfo, string PdfFile, object userState) {
            if ((this.DeleteTempForReceivePDFOperationCompleted == null)) {
                this.DeleteTempForReceivePDFOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteTempForReceivePDFOperationCompleted);
            }
            this.InvokeAsync("DeleteTempForReceivePDF", new object[] {
                        sellerInfo,
                        PdfFile}, this.DeleteTempForReceivePDFOperationCompleted, userState);
        }
        
        private void OnDeleteTempForReceivePDFOperationCompleted(object arg) {
            if ((this.DeleteTempForReceivePDFCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteTempForReceivePDFCompleted(this, new DeleteTempForReceivePDFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.uxb2b.com/GetInvoiceMailTracking", RequestNamespace="http://www.uxb2b.com/", ResponseNamespace="http://www.uxb2b.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetInvoiceMailTracking(System.Xml.XmlNode sellerInfo, string clientID) {
            object[] results = this.Invoke("GetInvoiceMailTracking", new object[] {
                        sellerInfo,
                        clientID});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetInvoiceMailTrackingAsync(System.Xml.XmlNode sellerInfo, string clientID) {
            this.GetInvoiceMailTrackingAsync(sellerInfo, clientID, null);
        }
        
        /// <remarks/>
        public void GetInvoiceMailTrackingAsync(System.Xml.XmlNode sellerInfo, string clientID, object userState) {
            if ((this.GetInvoiceMailTrackingOperationCompleted == null)) {
                this.GetInvoiceMailTrackingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInvoiceMailTrackingOperationCompleted);
            }
            this.InvokeAsync("GetInvoiceMailTracking", new object[] {
                        sellerInfo,
                        clientID}, this.GetInvoiceMailTrackingOperationCompleted, userState);
        }
        
        private void OnGetInvoiceMailTrackingOperationCompleted(object arg) {
            if ((this.GetInvoiceMailTrackingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInvoiceMailTrackingCompleted(this, new GetInvoiceMailTrackingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.uxb2b.com/GetInvoiceReturnedMail", RequestNamespace="http://www.uxb2b.com/", ResponseNamespace="http://www.uxb2b.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetInvoiceReturnedMail(System.Xml.XmlNode sellerInfo, string clientID) {
            object[] results = this.Invoke("GetInvoiceReturnedMail", new object[] {
                        sellerInfo,
                        clientID});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetInvoiceReturnedMailAsync(System.Xml.XmlNode sellerInfo, string clientID) {
            this.GetInvoiceReturnedMailAsync(sellerInfo, clientID, null);
        }
        
        /// <remarks/>
        public void GetInvoiceReturnedMailAsync(System.Xml.XmlNode sellerInfo, string clientID, object userState) {
            if ((this.GetInvoiceReturnedMailOperationCompleted == null)) {
                this.GetInvoiceReturnedMailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInvoiceReturnedMailOperationCompleted);
            }
            this.InvokeAsync("GetInvoiceReturnedMail", new object[] {
                        sellerInfo,
                        clientID}, this.GetInvoiceReturnedMailOperationCompleted, userState);
        }
        
        private void OnGetInvoiceReturnedMailOperationCompleted(object arg) {
            if ((this.GetInvoiceReturnedMailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInvoiceReturnedMailCompleted(this, new GetInvoiceReturnedMailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.uxb2b.com/AlertFailedTransaction", RequestNamespace="http://www.uxb2b.com/", ResponseNamespace="http://www.uxb2b.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AlertFailedTransaction(System.Xml.XmlNode sellerInfo) {
            this.Invoke("AlertFailedTransaction", new object[] {
                        sellerInfo});
        }
        
        /// <remarks/>
        public void AlertFailedTransactionAsync(System.Xml.XmlNode sellerInfo) {
            this.AlertFailedTransactionAsync(sellerInfo, null);
        }
        
        /// <remarks/>
        public void AlertFailedTransactionAsync(System.Xml.XmlNode sellerInfo, object userState) {
            if ((this.AlertFailedTransactionOperationCompleted == null)) {
                this.AlertFailedTransactionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAlertFailedTransactionOperationCompleted);
            }
            this.InvokeAsync("AlertFailedTransaction", new object[] {
                        sellerInfo}, this.AlertFailedTransactionOperationCompleted, userState);
        }
        
        private void OnAlertFailedTransactionOperationCompleted(object arg) {
            if ((this.AlertFailedTransactionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AlertFailedTransactionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.uxb2b.com/B2BUploadReceipt", RequestNamespace="http://www.uxb2b.com/", ResponseNamespace="http://www.uxb2b.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode B2BUploadReceipt(System.Xml.XmlNode uploadData) {
            object[] results = this.Invoke("B2BUploadReceipt", new object[] {
                        uploadData});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void B2BUploadReceiptAsync(System.Xml.XmlNode uploadData) {
            this.B2BUploadReceiptAsync(uploadData, null);
        }
        
        /// <remarks/>
        public void B2BUploadReceiptAsync(System.Xml.XmlNode uploadData, object userState) {
            if ((this.B2BUploadReceiptOperationCompleted == null)) {
                this.B2BUploadReceiptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnB2BUploadReceiptOperationCompleted);
            }
            this.InvokeAsync("B2BUploadReceipt", new object[] {
                        uploadData}, this.B2BUploadReceiptOperationCompleted, userState);
        }
        
        private void OnB2BUploadReceiptOperationCompleted(object arg) {
            if ((this.B2BUploadReceiptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.B2BUploadReceiptCompleted(this, new B2BUploadReceiptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.uxb2b.com/B2BUploadReceiptCancellation", RequestNamespace="http://www.uxb2b.com/", ResponseNamespace="http://www.uxb2b.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode B2BUploadReceiptCancellation(System.Xml.XmlNode uploadData) {
            object[] results = this.Invoke("B2BUploadReceiptCancellation", new object[] {
                        uploadData});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void B2BUploadReceiptCancellationAsync(System.Xml.XmlNode uploadData) {
            this.B2BUploadReceiptCancellationAsync(uploadData, null);
        }
        
        /// <remarks/>
        public void B2BUploadReceiptCancellationAsync(System.Xml.XmlNode uploadData, object userState) {
            if ((this.B2BUploadReceiptCancellationOperationCompleted == null)) {
                this.B2BUploadReceiptCancellationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnB2BUploadReceiptCancellationOperationCompleted);
            }
            this.InvokeAsync("B2BUploadReceiptCancellation", new object[] {
                        uploadData}, this.B2BUploadReceiptCancellationOperationCompleted, userState);
        }
        
        private void OnB2BUploadReceiptCancellationOperationCompleted(object arg) {
            if ((this.B2BUploadReceiptCancellationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.B2BUploadReceiptCancellationCompleted(this, new B2BUploadReceiptCancellationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.uxb2b.com/B2BUploadInvoice", RequestNamespace="http://www.uxb2b.com/", ResponseNamespace="http://www.uxb2b.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode B2BUploadInvoice(System.Xml.XmlNode uploadData) {
            object[] results = this.Invoke("B2BUploadInvoice", new object[] {
                        uploadData});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void B2BUploadInvoiceAsync(System.Xml.XmlNode uploadData) {
            this.B2BUploadInvoiceAsync(uploadData, null);
        }
        
        /// <remarks/>
        public void B2BUploadInvoiceAsync(System.Xml.XmlNode uploadData, object userState) {
            if ((this.B2BUploadInvoiceOperationCompleted == null)) {
                this.B2BUploadInvoiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnB2BUploadInvoiceOperationCompleted);
            }
            this.InvokeAsync("B2BUploadInvoice", new object[] {
                        uploadData}, this.B2BUploadInvoiceOperationCompleted, userState);
        }
        
        private void OnB2BUploadInvoiceOperationCompleted(object arg) {
            if ((this.B2BUploadInvoiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.B2BUploadInvoiceCompleted(this, new B2BUploadInvoiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.uxb2b.com/B2BUploadAllowance", RequestNamespace="http://www.uxb2b.com/", ResponseNamespace="http://www.uxb2b.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode B2BUploadAllowance(System.Xml.XmlNode uploadData) {
            object[] results = this.Invoke("B2BUploadAllowance", new object[] {
                        uploadData});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void B2BUploadAllowanceAsync(System.Xml.XmlNode uploadData) {
            this.B2BUploadAllowanceAsync(uploadData, null);
        }
        
        /// <remarks/>
        public void B2BUploadAllowanceAsync(System.Xml.XmlNode uploadData, object userState) {
            if ((this.B2BUploadAllowanceOperationCompleted == null)) {
                this.B2BUploadAllowanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnB2BUploadAllowanceOperationCompleted);
            }
            this.InvokeAsync("B2BUploadAllowance", new object[] {
                        uploadData}, this.B2BUploadAllowanceOperationCompleted, userState);
        }
        
        private void OnB2BUploadAllowanceOperationCompleted(object arg) {
            if ((this.B2BUploadAllowanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.B2BUploadAllowanceCompleted(this, new B2BUploadAllowanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.uxb2b.com/B2BUploadAllowanceCancellation", RequestNamespace="http://www.uxb2b.com/", ResponseNamespace="http://www.uxb2b.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode B2BUploadAllowanceCancellation(System.Xml.XmlNode uploadData) {
            object[] results = this.Invoke("B2BUploadAllowanceCancellation", new object[] {
                        uploadData});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void B2BUploadAllowanceCancellationAsync(System.Xml.XmlNode uploadData) {
            this.B2BUploadAllowanceCancellationAsync(uploadData, null);
        }
        
        /// <remarks/>
        public void B2BUploadAllowanceCancellationAsync(System.Xml.XmlNode uploadData, object userState) {
            if ((this.B2BUploadAllowanceCancellationOperationCompleted == null)) {
                this.B2BUploadAllowanceCancellationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnB2BUploadAllowanceCancellationOperationCompleted);
            }
            this.InvokeAsync("B2BUploadAllowanceCancellation", new object[] {
                        uploadData}, this.B2BUploadAllowanceCancellationOperationCompleted, userState);
        }
        
        private void OnB2BUploadAllowanceCancellationOperationCompleted(object arg) {
            if ((this.B2BUploadAllowanceCancellationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.B2BUploadAllowanceCancellationCompleted(this, new B2BUploadAllowanceCancellationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.uxb2b.com/B2BUploadInvoiceCancellation", RequestNamespace="http://www.uxb2b.com/", ResponseNamespace="http://www.uxb2b.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode B2BUploadInvoiceCancellation(System.Xml.XmlNode uploadData) {
            object[] results = this.Invoke("B2BUploadInvoiceCancellation", new object[] {
                        uploadData});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void B2BUploadInvoiceCancellationAsync(System.Xml.XmlNode uploadData) {
            this.B2BUploadInvoiceCancellationAsync(uploadData, null);
        }
        
        /// <remarks/>
        public void B2BUploadInvoiceCancellationAsync(System.Xml.XmlNode uploadData, object userState) {
            if ((this.B2BUploadInvoiceCancellationOperationCompleted == null)) {
                this.B2BUploadInvoiceCancellationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnB2BUploadInvoiceCancellationOperationCompleted);
            }
            this.InvokeAsync("B2BUploadInvoiceCancellation", new object[] {
                        uploadData}, this.B2BUploadInvoiceCancellationOperationCompleted, userState);
        }
        
        private void OnB2BUploadInvoiceCancellationOperationCompleted(object arg) {
            if ((this.B2BUploadInvoiceCancellationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.B2BUploadInvoiceCancellationCompleted(this, new B2BUploadInvoiceCancellationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.uxb2b.com/B2BUploadBuyerInvoice", RequestNamespace="http://www.uxb2b.com/", ResponseNamespace="http://www.uxb2b.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode B2BUploadBuyerInvoice(System.Xml.XmlNode uploadData) {
            object[] results = this.Invoke("B2BUploadBuyerInvoice", new object[] {
                        uploadData});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void B2BUploadBuyerInvoiceAsync(System.Xml.XmlNode uploadData) {
            this.B2BUploadBuyerInvoiceAsync(uploadData, null);
        }
        
        /// <remarks/>
        public void B2BUploadBuyerInvoiceAsync(System.Xml.XmlNode uploadData, object userState) {
            if ((this.B2BUploadBuyerInvoiceOperationCompleted == null)) {
                this.B2BUploadBuyerInvoiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnB2BUploadBuyerInvoiceOperationCompleted);
            }
            this.InvokeAsync("B2BUploadBuyerInvoice", new object[] {
                        uploadData}, this.B2BUploadBuyerInvoiceOperationCompleted, userState);
        }
        
        private void OnB2BUploadBuyerInvoiceOperationCompleted(object arg) {
            if ((this.B2BUploadBuyerInvoiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.B2BUploadBuyerInvoiceCompleted(this, new B2BUploadBuyerInvoiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.uxb2b.com/UploadBranchTrackBlank", RequestNamespace="http://www.uxb2b.com/", ResponseNamespace="http://www.uxb2b.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode UploadBranchTrackBlank(System.Xml.XmlNode uploadData) {
            object[] results = this.Invoke("UploadBranchTrackBlank", new object[] {
                        uploadData});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void UploadBranchTrackBlankAsync(System.Xml.XmlNode uploadData) {
            this.UploadBranchTrackBlankAsync(uploadData, null);
        }
        
        /// <remarks/>
        public void UploadBranchTrackBlankAsync(System.Xml.XmlNode uploadData, object userState) {
            if ((this.UploadBranchTrackBlankOperationCompleted == null)) {
                this.UploadBranchTrackBlankOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadBranchTrackBlankOperationCompleted);
            }
            this.InvokeAsync("UploadBranchTrackBlank", new object[] {
                        uploadData}, this.UploadBranchTrackBlankOperationCompleted, userState);
        }
        
        private void OnUploadBranchTrackBlankOperationCompleted(object arg) {
            if ((this.UploadBranchTrackBlankCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadBranchTrackBlankCompleted(this, new UploadBranchTrackBlankCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.uxb2b.com/AcknowledgeReceiving", RequestNamespace="http://www.uxb2b.com/", ResponseNamespace="http://www.uxb2b.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AcknowledgeReceiving(System.Xml.XmlNode uploadData) {
            this.Invoke("AcknowledgeReceiving", new object[] {
                        uploadData});
        }
        
        /// <remarks/>
        public void AcknowledgeReceivingAsync(System.Xml.XmlNode uploadData) {
            this.AcknowledgeReceivingAsync(uploadData, null);
        }
        
        /// <remarks/>
        public void AcknowledgeReceivingAsync(System.Xml.XmlNode uploadData, object userState) {
            if ((this.AcknowledgeReceivingOperationCompleted == null)) {
                this.AcknowledgeReceivingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAcknowledgeReceivingOperationCompleted);
            }
            this.InvokeAsync("AcknowledgeReceiving", new object[] {
                        uploadData}, this.AcknowledgeReceivingOperationCompleted, userState);
        }
        
        private void OnAcknowledgeReceivingOperationCompleted(object arg) {
            if ((this.AcknowledgeReceivingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AcknowledgeReceivingCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.uxb2b.com/NotifyCounterpartBusiness", RequestNamespace="http://www.uxb2b.com/", ResponseNamespace="http://www.uxb2b.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void NotifyCounterpartBusiness(System.Xml.XmlNode uploadData) {
            this.Invoke("NotifyCounterpartBusiness", new object[] {
                        uploadData});
        }
        
        /// <remarks/>
        public void NotifyCounterpartBusinessAsync(System.Xml.XmlNode uploadData) {
            this.NotifyCounterpartBusinessAsync(uploadData, null);
        }
        
        /// <remarks/>
        public void NotifyCounterpartBusinessAsync(System.Xml.XmlNode uploadData, object userState) {
            if ((this.NotifyCounterpartBusinessOperationCompleted == null)) {
                this.NotifyCounterpartBusinessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNotifyCounterpartBusinessOperationCompleted);
            }
            this.InvokeAsync("NotifyCounterpartBusiness", new object[] {
                        uploadData}, this.NotifyCounterpartBusinessOperationCompleted, userState);
        }
        
        private void OnNotifyCounterpartBusinessOperationCompleted(object arg) {
            if ((this.NotifyCounterpartBusinessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NotifyCounterpartBusinessCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.uxb2b.com/B2BReceiveA0501", RequestNamespace="http://www.uxb2b.com/", ResponseNamespace="http://www.uxb2b.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode B2BReceiveA0501(System.Xml.XmlNode sellerInfo) {
            object[] results = this.Invoke("B2BReceiveA0501", new object[] {
                        sellerInfo});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void B2BReceiveA0501Async(System.Xml.XmlNode sellerInfo) {
            this.B2BReceiveA0501Async(sellerInfo, null);
        }
        
        /// <remarks/>
        public void B2BReceiveA0501Async(System.Xml.XmlNode sellerInfo, object userState) {
            if ((this.B2BReceiveA0501OperationCompleted == null)) {
                this.B2BReceiveA0501OperationCompleted = new System.Threading.SendOrPostCallback(this.OnB2BReceiveA0501OperationCompleted);
            }
            this.InvokeAsync("B2BReceiveA0501", new object[] {
                        sellerInfo}, this.B2BReceiveA0501OperationCompleted, userState);
        }
        
        private void OnB2BReceiveA0501OperationCompleted(object arg) {
            if ((this.B2BReceiveA0501Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.B2BReceiveA0501Completed(this, new B2BReceiveA0501CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.uxb2b.com/B2BReceiveB0501", RequestNamespace="http://www.uxb2b.com/", ResponseNamespace="http://www.uxb2b.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode B2BReceiveB0501(System.Xml.XmlNode sellerInfo) {
            object[] results = this.Invoke("B2BReceiveB0501", new object[] {
                        sellerInfo});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void B2BReceiveB0501Async(System.Xml.XmlNode sellerInfo) {
            this.B2BReceiveB0501Async(sellerInfo, null);
        }
        
        /// <remarks/>
        public void B2BReceiveB0501Async(System.Xml.XmlNode sellerInfo, object userState) {
            if ((this.B2BReceiveB0501OperationCompleted == null)) {
                this.B2BReceiveB0501OperationCompleted = new System.Threading.SendOrPostCallback(this.OnB2BReceiveB0501OperationCompleted);
            }
            this.InvokeAsync("B2BReceiveB0501", new object[] {
                        sellerInfo}, this.B2BReceiveB0501OperationCompleted, userState);
        }
        
        private void OnB2BReceiveB0501OperationCompleted(object arg) {
            if ((this.B2BReceiveB0501Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.B2BReceiveB0501Completed(this, new B2BReceiveB0501CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.uxb2b.com/ReceiveContentAsPDFB2B", RequestNamespace="http://www.uxb2b.com/", ResponseNamespace="http://www.uxb2b.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] ReceiveContentAsPDFB2B(System.Xml.XmlNode sellerInfo) {
            object[] results = this.Invoke("ReceiveContentAsPDFB2B", new object[] {
                        sellerInfo});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void ReceiveContentAsPDFB2BAsync(System.Xml.XmlNode sellerInfo) {
            this.ReceiveContentAsPDFB2BAsync(sellerInfo, null);
        }
        
        /// <remarks/>
        public void ReceiveContentAsPDFB2BAsync(System.Xml.XmlNode sellerInfo, object userState) {
            if ((this.ReceiveContentAsPDFB2BOperationCompleted == null)) {
                this.ReceiveContentAsPDFB2BOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReceiveContentAsPDFB2BOperationCompleted);
            }
            this.InvokeAsync("ReceiveContentAsPDFB2B", new object[] {
                        sellerInfo}, this.ReceiveContentAsPDFB2BOperationCompleted, userState);
        }
        
        private void OnReceiveContentAsPDFB2BOperationCompleted(object arg) {
            if ((this.ReceiveContentAsPDFB2BCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReceiveContentAsPDFB2BCompleted(this, new ReceiveContentAsPDFB2BCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.uxb2b.com/DeleteTempForReceivePDFB2B", RequestNamespace="http://www.uxb2b.com/", ResponseNamespace="http://www.uxb2b.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteTempForReceivePDFB2B(System.Xml.XmlNode sellerInfo, int docID) {
            object[] results = this.Invoke("DeleteTempForReceivePDFB2B", new object[] {
                        sellerInfo,
                        docID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteTempForReceivePDFB2BAsync(System.Xml.XmlNode sellerInfo, int docID) {
            this.DeleteTempForReceivePDFB2BAsync(sellerInfo, docID, null);
        }
        
        /// <remarks/>
        public void DeleteTempForReceivePDFB2BAsync(System.Xml.XmlNode sellerInfo, int docID, object userState) {
            if ((this.DeleteTempForReceivePDFB2BOperationCompleted == null)) {
                this.DeleteTempForReceivePDFB2BOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteTempForReceivePDFB2BOperationCompleted);
            }
            this.InvokeAsync("DeleteTempForReceivePDFB2B", new object[] {
                        sellerInfo,
                        docID}, this.DeleteTempForReceivePDFB2BOperationCompleted, userState);
        }
        
        private void OnDeleteTempForReceivePDFB2BOperationCompleted(object arg) {
            if ((this.DeleteTempForReceivePDFB2BCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteTempForReceivePDFB2BCompleted(this, new DeleteTempForReceivePDFB2BCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.uxb2b.com/UploadCounterpartBusiness", RequestNamespace="http://www.uxb2b.com/", ResponseNamespace="http://www.uxb2b.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode UploadCounterpartBusiness(System.Xml.XmlNode uploadData) {
            object[] results = this.Invoke("UploadCounterpartBusiness", new object[] {
                        uploadData});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void UploadCounterpartBusinessAsync(System.Xml.XmlNode uploadData) {
            this.UploadCounterpartBusinessAsync(uploadData, null);
        }
        
        /// <remarks/>
        public void UploadCounterpartBusinessAsync(System.Xml.XmlNode uploadData, object userState) {
            if ((this.UploadCounterpartBusinessOperationCompleted == null)) {
                this.UploadCounterpartBusinessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadCounterpartBusinessOperationCompleted);
            }
            this.InvokeAsync("UploadCounterpartBusiness", new object[] {
                        uploadData}, this.UploadCounterpartBusinessOperationCompleted, userState);
        }
        
        private void OnUploadCounterpartBusinessOperationCompleted(object arg) {
            if ((this.UploadCounterpartBusinessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadCounterpartBusinessCompleted(this, new UploadCounterpartBusinessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.uxb2b.com/GetServiceInfo", RequestNamespace="http://www.uxb2b.com/", ResponseNamespace="http://www.uxb2b.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetServiceInfo(System.Xml.XmlNode sellerInfo) {
            object[] results = this.Invoke("GetServiceInfo", new object[] {
                        sellerInfo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetServiceInfoAsync(System.Xml.XmlNode sellerInfo) {
            this.GetServiceInfoAsync(sellerInfo, null);
        }
        
        /// <remarks/>
        public void GetServiceInfoAsync(System.Xml.XmlNode sellerInfo, object userState) {
            if ((this.GetServiceInfoOperationCompleted == null)) {
                this.GetServiceInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServiceInfoOperationCompleted);
            }
            this.InvokeAsync("GetServiceInfo", new object[] {
                        sellerInfo}, this.GetServiceInfoOperationCompleted, userState);
        }
        
        private void OnGetServiceInfoOperationCompleted(object arg) {
            if ((this.GetServiceInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServiceInfoCompleted(this, new GetServiceInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.uxb2b.com/UploadInvoiceAutoTrackNoByClient", RequestNamespace="http://www.uxb2b.com/", ResponseNamespace="http://www.uxb2b.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode UploadInvoiceAutoTrackNoByClient(System.Xml.XmlNode uploadData, string clientID, int channelID) {
            object[] results = this.Invoke("UploadInvoiceAutoTrackNoByClient", new object[] {
                        uploadData,
                        clientID,
                        channelID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void UploadInvoiceAutoTrackNoByClientAsync(System.Xml.XmlNode uploadData, string clientID, int channelID) {
            this.UploadInvoiceAutoTrackNoByClientAsync(uploadData, clientID, channelID, null);
        }
        
        /// <remarks/>
        public void UploadInvoiceAutoTrackNoByClientAsync(System.Xml.XmlNode uploadData, string clientID, int channelID, object userState) {
            if ((this.UploadInvoiceAutoTrackNoByClientOperationCompleted == null)) {
                this.UploadInvoiceAutoTrackNoByClientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadInvoiceAutoTrackNoByClientOperationCompleted);
            }
            this.InvokeAsync("UploadInvoiceAutoTrackNoByClient", new object[] {
                        uploadData,
                        clientID,
                        channelID}, this.UploadInvoiceAutoTrackNoByClientOperationCompleted, userState);
        }
        
        private void OnUploadInvoiceAutoTrackNoByClientOperationCompleted(object arg) {
            if ((this.UploadInvoiceAutoTrackNoByClientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadInvoiceAutoTrackNoByClientCompleted(this, new UploadInvoiceAutoTrackNoByClientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.uxb2b.com/UploadInvoiceByClient", RequestNamespace="http://www.uxb2b.com/", ResponseNamespace="http://www.uxb2b.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode UploadInvoiceByClient(System.Xml.XmlNode uploadData, string clientID, int channelID, bool autoTrackNo, int processType) {
            object[] results = this.Invoke("UploadInvoiceByClient", new object[] {
                        uploadData,
                        clientID,
                        channelID,
                        autoTrackNo,
                        processType});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void UploadInvoiceByClientAsync(System.Xml.XmlNode uploadData, string clientID, int channelID, bool autoTrackNo, int processType) {
            this.UploadInvoiceByClientAsync(uploadData, clientID, channelID, autoTrackNo, processType, null);
        }
        
        /// <remarks/>
        public void UploadInvoiceByClientAsync(System.Xml.XmlNode uploadData, string clientID, int channelID, bool autoTrackNo, int processType, object userState) {
            if ((this.UploadInvoiceByClientOperationCompleted == null)) {
                this.UploadInvoiceByClientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadInvoiceByClientOperationCompleted);
            }
            this.InvokeAsync("UploadInvoiceByClient", new object[] {
                        uploadData,
                        clientID,
                        channelID,
                        autoTrackNo,
                        processType}, this.UploadInvoiceByClientOperationCompleted, userState);
        }
        
        private void OnUploadInvoiceByClientOperationCompleted(object arg) {
            if ((this.UploadInvoiceByClientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadInvoiceByClientCompleted(this, new UploadInvoiceByClientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.uxb2b.com/UploadAllowanceByClient", RequestNamespace="http://www.uxb2b.com/", ResponseNamespace="http://www.uxb2b.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode UploadAllowanceByClient(System.Xml.XmlNode uploadData, string clientID, int channelID) {
            object[] results = this.Invoke("UploadAllowanceByClient", new object[] {
                        uploadData,
                        clientID,
                        channelID});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void UploadAllowanceByClientAsync(System.Xml.XmlNode uploadData, string clientID, int channelID) {
            this.UploadAllowanceByClientAsync(uploadData, clientID, channelID, null);
        }
        
        /// <remarks/>
        public void UploadAllowanceByClientAsync(System.Xml.XmlNode uploadData, string clientID, int channelID, object userState) {
            if ((this.UploadAllowanceByClientOperationCompleted == null)) {
                this.UploadAllowanceByClientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadAllowanceByClientOperationCompleted);
            }
            this.InvokeAsync("UploadAllowanceByClient", new object[] {
                        uploadData,
                        clientID,
                        channelID}, this.UploadAllowanceByClientOperationCompleted, userState);
        }
        
        private void OnUploadAllowanceByClientOperationCompleted(object arg) {
            if ((this.UploadAllowanceByClientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadAllowanceByClientCompleted(this, new UploadAllowanceByClientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.uxb2b.com/UploadInvoiceAutoTrackNoV2", RequestNamespace="http://www.uxb2b.com/", ResponseNamespace="http://www.uxb2b.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode UploadInvoiceAutoTrackNoV2(System.Xml.XmlNode uploadData) {
            object[] results = this.Invoke("UploadInvoiceAutoTrackNoV2", new object[] {
                        uploadData});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void UploadInvoiceAutoTrackNoV2Async(System.Xml.XmlNode uploadData) {
            this.UploadInvoiceAutoTrackNoV2Async(uploadData, null);
        }
        
        /// <remarks/>
        public void UploadInvoiceAutoTrackNoV2Async(System.Xml.XmlNode uploadData, object userState) {
            if ((this.UploadInvoiceAutoTrackNoV2OperationCompleted == null)) {
                this.UploadInvoiceAutoTrackNoV2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadInvoiceAutoTrackNoV2OperationCompleted);
            }
            this.InvokeAsync("UploadInvoiceAutoTrackNoV2", new object[] {
                        uploadData}, this.UploadInvoiceAutoTrackNoV2OperationCompleted, userState);
        }
        
        private void OnUploadInvoiceAutoTrackNoV2OperationCompleted(object arg) {
            if ((this.UploadInvoiceAutoTrackNoV2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadInvoiceAutoTrackNoV2Completed(this, new UploadInvoiceAutoTrackNoV2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.uxb2b.com/UploadInvoiceCancellationV2", RequestNamespace="http://www.uxb2b.com/", ResponseNamespace="http://www.uxb2b.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode UploadInvoiceCancellationV2(System.Xml.XmlNode uploadData) {
            object[] results = this.Invoke("UploadInvoiceCancellationV2", new object[] {
                        uploadData});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void UploadInvoiceCancellationV2Async(System.Xml.XmlNode uploadData) {
            this.UploadInvoiceCancellationV2Async(uploadData, null);
        }
        
        /// <remarks/>
        public void UploadInvoiceCancellationV2Async(System.Xml.XmlNode uploadData, object userState) {
            if ((this.UploadInvoiceCancellationV2OperationCompleted == null)) {
                this.UploadInvoiceCancellationV2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadInvoiceCancellationV2OperationCompleted);
            }
            this.InvokeAsync("UploadInvoiceCancellationV2", new object[] {
                        uploadData}, this.UploadInvoiceCancellationV2OperationCompleted, userState);
        }
        
        private void OnUploadInvoiceCancellationV2OperationCompleted(object arg) {
            if ((this.UploadInvoiceCancellationV2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadInvoiceCancellationV2Completed(this, new UploadInvoiceCancellationV2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.uxb2b.com/UploadAllowanceV2", RequestNamespace="http://www.uxb2b.com/", ResponseNamespace="http://www.uxb2b.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode UploadAllowanceV2(System.Xml.XmlNode uploadData) {
            object[] results = this.Invoke("UploadAllowanceV2", new object[] {
                        uploadData});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void UploadAllowanceV2Async(System.Xml.XmlNode uploadData) {
            this.UploadAllowanceV2Async(uploadData, null);
        }
        
        /// <remarks/>
        public void UploadAllowanceV2Async(System.Xml.XmlNode uploadData, object userState) {
            if ((this.UploadAllowanceV2OperationCompleted == null)) {
                this.UploadAllowanceV2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadAllowanceV2OperationCompleted);
            }
            this.InvokeAsync("UploadAllowanceV2", new object[] {
                        uploadData}, this.UploadAllowanceV2OperationCompleted, userState);
        }
        
        private void OnUploadAllowanceV2OperationCompleted(object arg) {
            if ((this.UploadAllowanceV2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadAllowanceV2Completed(this, new UploadAllowanceV2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.uxb2b.com/UploadAllowanceCancellationV2", RequestNamespace="http://www.uxb2b.com/", ResponseNamespace="http://www.uxb2b.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode UploadAllowanceCancellationV2(System.Xml.XmlNode uploadData) {
            object[] results = this.Invoke("UploadAllowanceCancellationV2", new object[] {
                        uploadData});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void UploadAllowanceCancellationV2Async(System.Xml.XmlNode uploadData) {
            this.UploadAllowanceCancellationV2Async(uploadData, null);
        }
        
        /// <remarks/>
        public void UploadAllowanceCancellationV2Async(System.Xml.XmlNode uploadData, object userState) {
            if ((this.UploadAllowanceCancellationV2OperationCompleted == null)) {
                this.UploadAllowanceCancellationV2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadAllowanceCancellationV2OperationCompleted);
            }
            this.InvokeAsync("UploadAllowanceCancellationV2", new object[] {
                        uploadData}, this.UploadAllowanceCancellationV2OperationCompleted, userState);
        }
        
        private void OnUploadAllowanceCancellationV2OperationCompleted(object arg) {
            if ((this.UploadAllowanceCancellationV2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadAllowanceCancellationV2Completed(this, new UploadAllowanceCancellationV2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.uxb2b.com/UploadInvoiceV2", RequestNamespace="http://www.uxb2b.com/", ResponseNamespace="http://www.uxb2b.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode UploadInvoiceV2(System.Xml.XmlNode uploadData) {
            object[] results = this.Invoke("UploadInvoiceV2", new object[] {
                        uploadData});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void UploadInvoiceV2Async(System.Xml.XmlNode uploadData) {
            this.UploadInvoiceV2Async(uploadData, null);
        }
        
        /// <remarks/>
        public void UploadInvoiceV2Async(System.Xml.XmlNode uploadData, object userState) {
            if ((this.UploadInvoiceV2OperationCompleted == null)) {
                this.UploadInvoiceV2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadInvoiceV2OperationCompleted);
            }
            this.InvokeAsync("UploadInvoiceV2", new object[] {
                        uploadData}, this.UploadInvoiceV2OperationCompleted, userState);
        }
        
        private void OnUploadInvoiceV2OperationCompleted(object arg) {
            if ((this.UploadInvoiceV2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadInvoiceV2Completed(this, new UploadInvoiceV2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.uxb2b.com/UploadInvoiceCmsCSVAutoTrackNoV2", RequestNamespace="http://www.uxb2b.com/", ResponseNamespace="http://www.uxb2b.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode UploadInvoiceCmsCSVAutoTrackNoV2([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] uploadData) {
            object[] results = this.Invoke("UploadInvoiceCmsCSVAutoTrackNoV2", new object[] {
                        uploadData});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void UploadInvoiceCmsCSVAutoTrackNoV2Async(byte[] uploadData) {
            this.UploadInvoiceCmsCSVAutoTrackNoV2Async(uploadData, null);
        }
        
        /// <remarks/>
        public void UploadInvoiceCmsCSVAutoTrackNoV2Async(byte[] uploadData, object userState) {
            if ((this.UploadInvoiceCmsCSVAutoTrackNoV2OperationCompleted == null)) {
                this.UploadInvoiceCmsCSVAutoTrackNoV2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadInvoiceCmsCSVAutoTrackNoV2OperationCompleted);
            }
            this.InvokeAsync("UploadInvoiceCmsCSVAutoTrackNoV2", new object[] {
                        uploadData}, this.UploadInvoiceCmsCSVAutoTrackNoV2OperationCompleted, userState);
        }
        
        private void OnUploadInvoiceCmsCSVAutoTrackNoV2OperationCompleted(object arg) {
            if ((this.UploadInvoiceCmsCSVAutoTrackNoV2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadInvoiceCmsCSVAutoTrackNoV2Completed(this, new UploadInvoiceCmsCSVAutoTrackNoV2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.uxb2b.com/UploadAllowanceCmsCSV", RequestNamespace="http://www.uxb2b.com/", ResponseNamespace="http://www.uxb2b.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode UploadAllowanceCmsCSV([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] uploadData) {
            object[] results = this.Invoke("UploadAllowanceCmsCSV", new object[] {
                        uploadData});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void UploadAllowanceCmsCSVAsync(byte[] uploadData) {
            this.UploadAllowanceCmsCSVAsync(uploadData, null);
        }
        
        /// <remarks/>
        public void UploadAllowanceCmsCSVAsync(byte[] uploadData, object userState) {
            if ((this.UploadAllowanceCmsCSVOperationCompleted == null)) {
                this.UploadAllowanceCmsCSVOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadAllowanceCmsCSVOperationCompleted);
            }
            this.InvokeAsync("UploadAllowanceCmsCSV", new object[] {
                        uploadData}, this.UploadAllowanceCmsCSVOperationCompleted, userState);
        }
        
        private void OnUploadAllowanceCmsCSVOperationCompleted(object arg) {
            if ((this.UploadAllowanceCmsCSVCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadAllowanceCmsCSVCompleted(this, new UploadAllowanceCmsCSVCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.uxb2b.com/UploadBranchTrack", RequestNamespace="http://www.uxb2b.com/", ResponseNamespace="http://www.uxb2b.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode UploadBranchTrack(System.Xml.XmlNode uploadData) {
            object[] results = this.Invoke("UploadBranchTrack", new object[] {
                        uploadData});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void UploadBranchTrackAsync(System.Xml.XmlNode uploadData) {
            this.UploadBranchTrackAsync(uploadData, null);
        }
        
        /// <remarks/>
        public void UploadBranchTrackAsync(System.Xml.XmlNode uploadData, object userState) {
            if ((this.UploadBranchTrackOperationCompleted == null)) {
                this.UploadBranchTrackOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadBranchTrackOperationCompleted);
            }
            this.InvokeAsync("UploadBranchTrack", new object[] {
                        uploadData}, this.UploadBranchTrackOperationCompleted, userState);
        }
        
        private void OnUploadBranchTrackOperationCompleted(object arg) {
            if ((this.UploadBranchTrackCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadBranchTrackCompleted(this, new UploadBranchTrackCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.uxb2b.com/UploadInvoiceV2_C0401", RequestNamespace="http://www.uxb2b.com/", ResponseNamespace="http://www.uxb2b.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode UploadInvoiceV2_C0401(System.Xml.XmlNode uploadData) {
            object[] results = this.Invoke("UploadInvoiceV2_C0401", new object[] {
                        uploadData});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void UploadInvoiceV2_C0401Async(System.Xml.XmlNode uploadData) {
            this.UploadInvoiceV2_C0401Async(uploadData, null);
        }
        
        /// <remarks/>
        public void UploadInvoiceV2_C0401Async(System.Xml.XmlNode uploadData, object userState) {
            if ((this.UploadInvoiceV2_C0401OperationCompleted == null)) {
                this.UploadInvoiceV2_C0401OperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadInvoiceV2_C0401OperationCompleted);
            }
            this.InvokeAsync("UploadInvoiceV2_C0401", new object[] {
                        uploadData}, this.UploadInvoiceV2_C0401OperationCompleted, userState);
        }
        
        private void OnUploadInvoiceV2_C0401OperationCompleted(object arg) {
            if ((this.UploadInvoiceV2_C0401Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadInvoiceV2_C0401Completed(this, new UploadInvoiceV2_C0401CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.uxb2b.com/UploadAllowance_D0401", RequestNamespace="http://www.uxb2b.com/", ResponseNamespace="http://www.uxb2b.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode UploadAllowance_D0401(System.Xml.XmlNode uploadData) {
            object[] results = this.Invoke("UploadAllowance_D0401", new object[] {
                        uploadData});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void UploadAllowance_D0401Async(System.Xml.XmlNode uploadData) {
            this.UploadAllowance_D0401Async(uploadData, null);
        }
        
        /// <remarks/>
        public void UploadAllowance_D0401Async(System.Xml.XmlNode uploadData, object userState) {
            if ((this.UploadAllowance_D0401OperationCompleted == null)) {
                this.UploadAllowance_D0401OperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadAllowance_D0401OperationCompleted);
            }
            this.InvokeAsync("UploadAllowance_D0401", new object[] {
                        uploadData}, this.UploadAllowance_D0401OperationCompleted, userState);
        }
        
        private void OnUploadAllowance_D0401OperationCompleted(object arg) {
            if ((this.UploadAllowance_D0401Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadAllowance_D0401Completed(this, new UploadAllowance_D0401CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.uxb2b.com/UploadInvoiceCancellationV2_C0501", RequestNamespace="http://www.uxb2b.com/", ResponseNamespace="http://www.uxb2b.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode UploadInvoiceCancellationV2_C0501(System.Xml.XmlNode uploadData) {
            object[] results = this.Invoke("UploadInvoiceCancellationV2_C0501", new object[] {
                        uploadData});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void UploadInvoiceCancellationV2_C0501Async(System.Xml.XmlNode uploadData) {
            this.UploadInvoiceCancellationV2_C0501Async(uploadData, null);
        }
        
        /// <remarks/>
        public void UploadInvoiceCancellationV2_C0501Async(System.Xml.XmlNode uploadData, object userState) {
            if ((this.UploadInvoiceCancellationV2_C0501OperationCompleted == null)) {
                this.UploadInvoiceCancellationV2_C0501OperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadInvoiceCancellationV2_C0501OperationCompleted);
            }
            this.InvokeAsync("UploadInvoiceCancellationV2_C0501", new object[] {
                        uploadData}, this.UploadInvoiceCancellationV2_C0501OperationCompleted, userState);
        }
        
        private void OnUploadInvoiceCancellationV2_C0501OperationCompleted(object arg) {
            if ((this.UploadInvoiceCancellationV2_C0501Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadInvoiceCancellationV2_C0501Completed(this, new UploadInvoiceCancellationV2_C0501CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.uxb2b.com/UploadAllowanceCancellationV2_D0501", RequestNamespace="http://www.uxb2b.com/", ResponseNamespace="http://www.uxb2b.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode UploadAllowanceCancellationV2_D0501(System.Xml.XmlNode uploadData) {
            object[] results = this.Invoke("UploadAllowanceCancellationV2_D0501", new object[] {
                        uploadData});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void UploadAllowanceCancellationV2_D0501Async(System.Xml.XmlNode uploadData) {
            this.UploadAllowanceCancellationV2_D0501Async(uploadData, null);
        }
        
        /// <remarks/>
        public void UploadAllowanceCancellationV2_D0501Async(System.Xml.XmlNode uploadData, object userState) {
            if ((this.UploadAllowanceCancellationV2_D0501OperationCompleted == null)) {
                this.UploadAllowanceCancellationV2_D0501OperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadAllowanceCancellationV2_D0501OperationCompleted);
            }
            this.InvokeAsync("UploadAllowanceCancellationV2_D0501", new object[] {
                        uploadData}, this.UploadAllowanceCancellationV2_D0501OperationCompleted, userState);
        }
        
        private void OnUploadAllowanceCancellationV2_D0501OperationCompleted(object arg) {
            if ((this.UploadAllowanceCancellationV2_D0501Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadAllowanceCancellationV2_D0501Completed(this, new UploadAllowanceCancellationV2_D0501CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.uxb2b.com/UploadInvoiceEnterprise", RequestNamespace="http://www.uxb2b.com/", ResponseNamespace="http://www.uxb2b.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode UploadInvoiceEnterprise(System.Xml.XmlNode uploadData) {
            object[] results = this.Invoke("UploadInvoiceEnterprise", new object[] {
                        uploadData});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void UploadInvoiceEnterpriseAsync(System.Xml.XmlNode uploadData) {
            this.UploadInvoiceEnterpriseAsync(uploadData, null);
        }
        
        /// <remarks/>
        public void UploadInvoiceEnterpriseAsync(System.Xml.XmlNode uploadData, object userState) {
            if ((this.UploadInvoiceEnterpriseOperationCompleted == null)) {
                this.UploadInvoiceEnterpriseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadInvoiceEnterpriseOperationCompleted);
            }
            this.InvokeAsync("UploadInvoiceEnterprise", new object[] {
                        uploadData}, this.UploadInvoiceEnterpriseOperationCompleted, userState);
        }
        
        private void OnUploadInvoiceEnterpriseOperationCompleted(object arg) {
            if ((this.UploadInvoiceEnterpriseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadInvoiceEnterpriseCompleted(this, new UploadInvoiceEnterpriseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.uxb2b.com/GetCurrentYearInvoiceTrackCode", RequestNamespace="http://www.uxb2b.com/", ResponseNamespace="http://www.uxb2b.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetCurrentYearInvoiceTrackCode(System.Xml.XmlNode sellerInfo) {
            object[] results = this.Invoke("GetCurrentYearInvoiceTrackCode", new object[] {
                        sellerInfo});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetCurrentYearInvoiceTrackCodeAsync(System.Xml.XmlNode sellerInfo) {
            this.GetCurrentYearInvoiceTrackCodeAsync(sellerInfo, null);
        }
        
        /// <remarks/>
        public void GetCurrentYearInvoiceTrackCodeAsync(System.Xml.XmlNode sellerInfo, object userState) {
            if ((this.GetCurrentYearInvoiceTrackCodeOperationCompleted == null)) {
                this.GetCurrentYearInvoiceTrackCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurrentYearInvoiceTrackCodeOperationCompleted);
            }
            this.InvokeAsync("GetCurrentYearInvoiceTrackCode", new object[] {
                        sellerInfo}, this.GetCurrentYearInvoiceTrackCodeOperationCompleted, userState);
        }
        
        private void OnGetCurrentYearInvoiceTrackCodeOperationCompleted(object arg) {
            if ((this.GetCurrentYearInvoiceTrackCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurrentYearInvoiceTrackCodeCompleted(this, new GetCurrentYearInvoiceTrackCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.uxb2b.com/GetCustomerIdListByAgent", RequestNamespace="http://www.uxb2b.com/", ResponseNamespace="http://www.uxb2b.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetCustomerIdListByAgent(System.Xml.XmlNode sellerInfo) {
            object[] results = this.Invoke("GetCustomerIdListByAgent", new object[] {
                        sellerInfo});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomerIdListByAgentAsync(System.Xml.XmlNode sellerInfo) {
            this.GetCustomerIdListByAgentAsync(sellerInfo, null);
        }
        
        /// <remarks/>
        public void GetCustomerIdListByAgentAsync(System.Xml.XmlNode sellerInfo, object userState) {
            if ((this.GetCustomerIdListByAgentOperationCompleted == null)) {
                this.GetCustomerIdListByAgentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerIdListByAgentOperationCompleted);
            }
            this.InvokeAsync("GetCustomerIdListByAgent", new object[] {
                        sellerInfo}, this.GetCustomerIdListByAgentOperationCompleted, userState);
        }
        
        private void OnGetCustomerIdListByAgentOperationCompleted(object arg) {
            if ((this.GetCustomerIdListByAgentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerIdListByAgentCompleted(this, new GetCustomerIdListByAgentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.uxb2b.com/GetVacantInvoiceNo", RequestNamespace="http://www.uxb2b.com/", ResponseNamespace="http://www.uxb2b.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetVacantInvoiceNo(System.Xml.XmlNode sellerInfo, string receiptNo) {
            object[] results = this.Invoke("GetVacantInvoiceNo", new object[] {
                        sellerInfo,
                        receiptNo});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetVacantInvoiceNoAsync(System.Xml.XmlNode sellerInfo, string receiptNo) {
            this.GetVacantInvoiceNoAsync(sellerInfo, receiptNo, null);
        }
        
        /// <remarks/>
        public void GetVacantInvoiceNoAsync(System.Xml.XmlNode sellerInfo, string receiptNo, object userState) {
            if ((this.GetVacantInvoiceNoOperationCompleted == null)) {
                this.GetVacantInvoiceNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVacantInvoiceNoOperationCompleted);
            }
            this.InvokeAsync("GetVacantInvoiceNo", new object[] {
                        sellerInfo,
                        receiptNo}, this.GetVacantInvoiceNoOperationCompleted, userState);
        }
        
        private void OnGetVacantInvoiceNoOperationCompleted(object arg) {
            if ((this.GetVacantInvoiceNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVacantInvoiceNoCompleted(this, new GetVacantInvoiceNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UploadInvoiceBuyerCmsCSVCompletedEventHandler(object sender, UploadInvoiceBuyerCmsCSVCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadInvoiceBuyerCmsCSVCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadInvoiceBuyerCmsCSVCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UploadInvoiceCmsCSVCompletedEventHandler(object sender, UploadInvoiceCmsCSVCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadInvoiceCmsCSVCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadInvoiceCmsCSVCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UploadInvoiceCompletedEventHandler(object sender, UploadInvoiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadInvoiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadInvoiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UploadAllowanceCompletedEventHandler(object sender, UploadAllowanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadAllowanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadAllowanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UploadB0401CompletedEventHandler(object sender, UploadB0401CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadB0401CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadB0401CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UploadInvoiceAutoTrackNoCompletedEventHandler(object sender, UploadInvoiceAutoTrackNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadInvoiceAutoTrackNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadInvoiceAutoTrackNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UploadInvoiceCmsCSVAutoTrackNoCompletedEventHandler(object sender, UploadInvoiceCmsCSVAutoTrackNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadInvoiceCmsCSVAutoTrackNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadInvoiceCmsCSVAutoTrackNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UploadInvoiceCancellationCmsCSVCompletedEventHandler(object sender, UploadInvoiceCancellationCmsCSVCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadInvoiceCancellationCmsCSVCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadInvoiceCancellationCmsCSVCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UploadAllowanceCancellationCmsCSVCompletedEventHandler(object sender, UploadAllowanceCancellationCmsCSVCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadAllowanceCancellationCmsCSVCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadAllowanceCancellationCmsCSVCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UploadInvoiceCancellationCompletedEventHandler(object sender, UploadInvoiceCancellationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadInvoiceCancellationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadInvoiceCancellationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UploadAllowanceCancellationCompletedEventHandler(object sender, UploadAllowanceCancellationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadAllowanceCancellationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadAllowanceCancellationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UploadB0501CompletedEventHandler(object sender, UploadB0501CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadB0501CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadB0501CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetUpdatedWelfareAgenciesInfoCompletedEventHandler(object sender, GetUpdatedWelfareAgenciesInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUpdatedWelfareAgenciesInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUpdatedWelfareAgenciesInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetWelfareAgenciesInfoCompletedEventHandler(object sender, GetWelfareAgenciesInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWelfareAgenciesInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWelfareAgenciesInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetIncomingInvoicesCompletedEventHandler(object sender, GetIncomingInvoicesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetIncomingInvoicesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetIncomingInvoicesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetInvoicesMapCompletedEventHandler(object sender, GetInvoicesMapCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInvoicesMapCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInvoicesMapCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetIncomingInvoiceCancellationsCompletedEventHandler(object sender, GetIncomingInvoiceCancellationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetIncomingInvoiceCancellationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetIncomingInvoiceCancellationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetIncomingAllowancesCompletedEventHandler(object sender, GetIncomingAllowancesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetIncomingAllowancesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetIncomingAllowancesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetIncomingAllowanceCancellationsCompletedEventHandler(object sender, GetIncomingAllowanceCancellationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetIncomingAllowanceCancellationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetIncomingAllowanceCancellationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AcknowledgeLivingReportCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetIncomingWinningInvoicesCompletedEventHandler(object sender, GetIncomingWinningInvoicesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetIncomingWinningInvoicesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetIncomingWinningInvoicesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetSignerCertificateContentCompletedEventHandler(object sender, GetSignerCertificateContentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSignerCertificateContentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSignerCertificateContentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetRegisteredMemberCompletedEventHandler(object sender, GetRegisteredMemberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRegisteredMemberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRegisteredMemberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UploadA0401CompletedEventHandler(object sender, UploadA0401CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadA0401CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadA0401CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UploadA0201CompletedEventHandler(object sender, UploadA0201CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadA0201CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadA0201CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UploadA0501CompletedEventHandler(object sender, UploadA0501CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadA0501CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadA0501CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UploadB0201CompletedEventHandler(object sender, UploadB0201CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadB0201CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadB0201CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void B2CUploadInvoiceCompletedEventHandler(object sender, B2CUploadInvoiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class B2CUploadInvoiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal B2CUploadInvoiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void B2CUploadInvoiceCancellationCompletedEventHandler(object sender, B2CUploadInvoiceCancellationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class B2CUploadInvoiceCancellationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal B2CUploadInvoiceCancellationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ReceiveContentAsPDFForSellerCompletedEventHandler(object sender, ReceiveContentAsPDFForSellerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReceiveContentAsPDFForSellerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReceiveContentAsPDFForSellerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ReceiveContentAsPDFForIssuerCompletedEventHandler(object sender, ReceiveContentAsPDFForIssuerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReceiveContentAsPDFForIssuerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReceiveContentAsPDFForIssuerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ReceiveContentAsPDFCompletedEventHandler(object sender, ReceiveContentAsPDFCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReceiveContentAsPDFCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReceiveContentAsPDFCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ReceiveAllowancePDFCompletedEventHandler(object sender, ReceiveAllowancePDFCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReceiveAllowancePDFCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReceiveAllowancePDFCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteTempForReceivePDFCompletedEventHandler(object sender, DeleteTempForReceivePDFCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteTempForReceivePDFCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteTempForReceivePDFCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetInvoiceMailTrackingCompletedEventHandler(object sender, GetInvoiceMailTrackingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInvoiceMailTrackingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInvoiceMailTrackingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetInvoiceReturnedMailCompletedEventHandler(object sender, GetInvoiceReturnedMailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInvoiceReturnedMailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInvoiceReturnedMailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AlertFailedTransactionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void B2BUploadReceiptCompletedEventHandler(object sender, B2BUploadReceiptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class B2BUploadReceiptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal B2BUploadReceiptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void B2BUploadReceiptCancellationCompletedEventHandler(object sender, B2BUploadReceiptCancellationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class B2BUploadReceiptCancellationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal B2BUploadReceiptCancellationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void B2BUploadInvoiceCompletedEventHandler(object sender, B2BUploadInvoiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class B2BUploadInvoiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal B2BUploadInvoiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void B2BUploadAllowanceCompletedEventHandler(object sender, B2BUploadAllowanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class B2BUploadAllowanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal B2BUploadAllowanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void B2BUploadAllowanceCancellationCompletedEventHandler(object sender, B2BUploadAllowanceCancellationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class B2BUploadAllowanceCancellationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal B2BUploadAllowanceCancellationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void B2BUploadInvoiceCancellationCompletedEventHandler(object sender, B2BUploadInvoiceCancellationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class B2BUploadInvoiceCancellationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal B2BUploadInvoiceCancellationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void B2BUploadBuyerInvoiceCompletedEventHandler(object sender, B2BUploadBuyerInvoiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class B2BUploadBuyerInvoiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal B2BUploadBuyerInvoiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UploadBranchTrackBlankCompletedEventHandler(object sender, UploadBranchTrackBlankCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadBranchTrackBlankCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadBranchTrackBlankCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AcknowledgeReceivingCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void NotifyCounterpartBusinessCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void B2BReceiveA0501CompletedEventHandler(object sender, B2BReceiveA0501CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class B2BReceiveA0501CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal B2BReceiveA0501CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void B2BReceiveB0501CompletedEventHandler(object sender, B2BReceiveB0501CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class B2BReceiveB0501CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal B2BReceiveB0501CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ReceiveContentAsPDFB2BCompletedEventHandler(object sender, ReceiveContentAsPDFB2BCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReceiveContentAsPDFB2BCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReceiveContentAsPDFB2BCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteTempForReceivePDFB2BCompletedEventHandler(object sender, DeleteTempForReceivePDFB2BCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteTempForReceivePDFB2BCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteTempForReceivePDFB2BCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UploadCounterpartBusinessCompletedEventHandler(object sender, UploadCounterpartBusinessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadCounterpartBusinessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadCounterpartBusinessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetServiceInfoCompletedEventHandler(object sender, GetServiceInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServiceInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetServiceInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UploadInvoiceAutoTrackNoByClientCompletedEventHandler(object sender, UploadInvoiceAutoTrackNoByClientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadInvoiceAutoTrackNoByClientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadInvoiceAutoTrackNoByClientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UploadInvoiceByClientCompletedEventHandler(object sender, UploadInvoiceByClientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadInvoiceByClientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadInvoiceByClientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UploadAllowanceByClientCompletedEventHandler(object sender, UploadAllowanceByClientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadAllowanceByClientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadAllowanceByClientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UploadInvoiceAutoTrackNoV2CompletedEventHandler(object sender, UploadInvoiceAutoTrackNoV2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadInvoiceAutoTrackNoV2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadInvoiceAutoTrackNoV2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UploadInvoiceCancellationV2CompletedEventHandler(object sender, UploadInvoiceCancellationV2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadInvoiceCancellationV2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadInvoiceCancellationV2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UploadAllowanceV2CompletedEventHandler(object sender, UploadAllowanceV2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadAllowanceV2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadAllowanceV2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UploadAllowanceCancellationV2CompletedEventHandler(object sender, UploadAllowanceCancellationV2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadAllowanceCancellationV2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadAllowanceCancellationV2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UploadInvoiceV2CompletedEventHandler(object sender, UploadInvoiceV2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadInvoiceV2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadInvoiceV2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UploadInvoiceCmsCSVAutoTrackNoV2CompletedEventHandler(object sender, UploadInvoiceCmsCSVAutoTrackNoV2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadInvoiceCmsCSVAutoTrackNoV2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadInvoiceCmsCSVAutoTrackNoV2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UploadAllowanceCmsCSVCompletedEventHandler(object sender, UploadAllowanceCmsCSVCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadAllowanceCmsCSVCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadAllowanceCmsCSVCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UploadBranchTrackCompletedEventHandler(object sender, UploadBranchTrackCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadBranchTrackCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadBranchTrackCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UploadInvoiceV2_C0401CompletedEventHandler(object sender, UploadInvoiceV2_C0401CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadInvoiceV2_C0401CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadInvoiceV2_C0401CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UploadAllowance_D0401CompletedEventHandler(object sender, UploadAllowance_D0401CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadAllowance_D0401CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadAllowance_D0401CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UploadInvoiceCancellationV2_C0501CompletedEventHandler(object sender, UploadInvoiceCancellationV2_C0501CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadInvoiceCancellationV2_C0501CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadInvoiceCancellationV2_C0501CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UploadAllowanceCancellationV2_D0501CompletedEventHandler(object sender, UploadAllowanceCancellationV2_D0501CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadAllowanceCancellationV2_D0501CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadAllowanceCancellationV2_D0501CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UploadInvoiceEnterpriseCompletedEventHandler(object sender, UploadInvoiceEnterpriseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadInvoiceEnterpriseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadInvoiceEnterpriseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetCurrentYearInvoiceTrackCodeCompletedEventHandler(object sender, GetCurrentYearInvoiceTrackCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurrentYearInvoiceTrackCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurrentYearInvoiceTrackCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetCustomerIdListByAgentCompletedEventHandler(object sender, GetCustomerIdListByAgentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomerIdListByAgentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomerIdListByAgentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetVacantInvoiceNoCompletedEventHandler(object sender, GetVacantInvoiceNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVacantInvoiceNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVacantInvoiceNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591