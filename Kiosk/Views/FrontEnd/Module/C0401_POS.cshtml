@using System.Linq
@using System.IO
@using System.Linq.Expressions
@using System.Globalization

@using Newtonsoft.Json
@using Model.Models.ViewModel
@using Model.Schema.EIVO
@using Model.Helper
@using Model.Locale
@using Kiosk.Helper
@using Utility
@using Uxnet.Web.WebUI

@functions
{
    const int _FirstCheckCount = 6;
    const int _SecondCheckCount = 16;
    const int _ItemPagingCount = 10;
    bool _isDuplicatedPrint = false;
    InvoiceRootInvoice _model = null;
    String _logoUrl = null;
    String _sellerName = "瑞士商菲利普莫里斯股份有限公司";

    bool IsB2C()
    {
        return _model.BuyerId == "0000000000";
    }

    public int? InvoiceTypeToFormat(String typeValue)
    {
        int type;
        if (int.TryParse(typeValue, out type))
        {
            switch (type)
            {
                case (int)Naming.InvoiceTypeDefinition.一般稅額計算之電子發票:
                    return (int)Naming.InvoiceTypeFormat.一般稅額計算之電子發票;
                case (int)Naming.InvoiceTypeDefinition.特種稅額計算之電子發票:
                    return (int)Naming.InvoiceTypeFormat.特種稅額;
                default:
                    return (int)Naming.InvoiceTypeFormat.一般稅額計算之電子發票;
            }
        }
        return null;
    }
}
@{

    RenderStyleViewModel _viewModel;

    _model = (InvoiceRootInvoice)this.Model;

    InvoiceRootInvoiceInvoiceItem[] _productItem = _model.InvoiceItem;


    _viewModel = ViewBag.ViewModel as RenderStyleViewModel;

}
@if (_model != null)
{

}

<div style="page-break-after: always;width:5.5cm;margin-left: 0cm;margin-right:0cm">

    <div class="container" style="border-top:0px;border-bottom: 0px;page-break-after: always;">
        <table>
            <tr>
                <td>
                    <div class="cutfield" style="/*width:5cm;*/border-top:0px;border:0px;/*font-weight:bold;*/">
                        @if (_logoUrl != null)
                        {
                            <img id="logo" style="max-width:5.2cm;max-height:1.7cm;" src='@(_logoUrl)' />
                        }
                        else
                        {
                            <div style="text-align:left; width:4.4cm">
                                <h3 class="title-small" style="width:4.2cm; padding-top:0px;font-weight:bold; height: 1.3cm; @(_sellerName != null && _sellerName.Length > 16 ? "font-size:small;" : null)">@(_sellerName)</h3>
                            </div>
                        }
                        @if (_isDuplicatedPrint)
                        {
                            <h2 style="font-size:larger;">電子發票證明聯補印</h2>
                        }
                        else
                        {
                            <h2>電子發票證明聯</h2>
                        }
                        @{
                            DateTime invoiceDate;
                            if (DateTime.TryParseExact(String.Format("{0} {1}", _model.InvoiceDate, _model.InvoiceTime), "yyyy/MM/dd HH:mm:ss", CultureInfo.CurrentCulture, DateTimeStyles.None, out invoiceDate))
                            {
                                <h2>@(invoiceDate.Year - 1911)年@((invoiceDate.Month % 2).Equals(0) ? String.Format("{0:00}-{1:00}", invoiceDate.Month - 1, invoiceDate.Month) : String.Format("{0:00}-{1:00}", invoiceDate.Month, invoiceDate.Month + 1))月 </h2>
                            }
                        }
                        <h2>@(_model.InvoiceNumber?.Substring(0,2))-@(_model.InvoiceNumber?.Substring(2))</h2>
                        <p>
                            @(String.Format("{0:yyyy-MM-dd HH:mm:ss}", invoiceDate))
                            @(IsB2C()
                                ? ""
                                : _model.BuyerMark==3 || _model.BuyerMark==4
                                    ? "不得扣抵"
                                    : String.Format("格式 {0}", InvoiceTypeToFormat(_model.InvoiceType)))<br />
                            隨機碼 @(_model.RandomNumber)&nbsp;&nbsp;&nbsp;&nbsp; 總計 @(String.Format("{0:##,###,###,##0.##}",_model.TotalAmount))<br />
                            賣方@(_model.SellerId) @(IsB2C() ? null : String.Format("買方{0}", _model.BuyerId))
                        </p>
                        <div class="code1">
                            @{
                                String data = $"{invoiceDate.Year - 1911:000}{(invoiceDate.Month + 1) / 2 * 2:00}{_model.InvoiceNumber}{_model.RandomNumber}";
                            }
                            <img id="barcode" alt="" style="max-width:4.7cm;" src="@(data.GetBarcode39ImageSrc(margin:10,height:40,wide:3,narrow:1))" />
                        </div>
                        <div class="code2" style="padding-left:0.3cm;">
                            <img style="margin-right: 0.3cm;width:2.0cm;" alt="" src="@(_model.GetLeftQRCodeImageSrc(qrVersion:8))" />
                            <img style="margin-right: 0.3cm;width:2.0cm;" alt="" src="@("**".CreateQRCodeImageSrc(width:180,height:180,qrVersion:8))" />
                        </div>
                    </div>
                </td>

            </tr>
        </table>
    </div>

    <div class="listfield" style="border-top:0px;border-bottom: 0px">
        <table style="width:4.8cm;font-size:8pt;font-weight:bold;">
            <tr>
                <td colspan="3">
                    <p style="display: inline-block;padding: 2px 0px;margin: 0;font-size:8pt;line-height: 1.5">品名</p>
                </td>
            </tr>
            <tr>
                <td style="width:20%">
                    <p style="display: inline-block;padding: 2px 0px;margin: 0;font-size:8pt;line-height: 1.5">數量</p>
                </td>
                <td style="width:40%">
                    <p style="display: inline-block;padding: 2px 0px;margin: 0;font-size:8pt;line-height: 1.5">單價</p>
                </td>
                <td style="width:40%">
                    <p style="display: inline-block;padding: 2px 0px;margin: 0;font-size:8pt;line-height: 1.5">小計</p>
                </td>
            </tr>

            @{ int _itemIdx;}
            @for (_itemIdx = 0; _productItem != null && _itemIdx < _productItem.Length; _itemIdx++)
            {
                var item = _productItem[_itemIdx];
                <tr>
                    <td colspan="3" height="15" valign="top">@(item.Description)</td>
                </tr>
                <tr>
                    <td align="right" valign="top">@(String.Format("{0:##,###,###,##0.##}", item.Quantity))</td>
                    <td align="right" valign="top">@(String.Format("{0:##,###,###,##0.##}", item.UnitPrice))</td>
                    <td align="right" valign="top">@(String.Format("{0:##,###,###,##0.##}", item.Amount))</td>
                </tr>
            }
            @if (_productItem != null)
            {
                <tr>
                    <td colspan="3" style="font-size: 8pt;">
                        <p style="border-top: 1px dotted #808080;">
                            <span style="font-size: 8pt;">總計：@(_model.InvoiceItem.Length)項&nbsp;&nbsp;金額：@(String.Format("{0:##,###,###,##0.##}", _model.TotalAmount))</span><br />
                            課稅別：@((_model.TaxType == (byte)2 || _model.TaxType == (byte)3) ? "TZ" : "TX")&nbsp;&nbsp;<br />
                            @if (!IsB2C())
                            {
                                <text>應稅銷售額：@(String.Format("{0:##,###,###,##0.##}", _model.SalesAmount))</text><br />
                                <text>零稅率銷售額：@(String.Format("{0:##,###,###,##0.##}", _model.ZeroTaxSalesAmountSpecified ? _model.ZeroTaxSalesAmount : 0)) </text><br />
                                <text>免稅銷售額：@(String.Format("{0:##,###,###,##0.##}", _model.FreeTaxSalesAmountSpecified ? _model.FreeTaxSalesAmount : 0)) </text><br />
                                <text>稅額：@(String.Format("{0:##,###,###,##0.##} ", _model.BuyerMark == 3 || _model.BuyerMark == 4 ? 0 : _model.TaxAmount))</text> <br />
                            }
                            備註：
                            @(_model.MainRemark)
                            @(String.Join(";", _model.InvoiceItem.Select(d => d.Remark.GetEfficientString()).Where(r=>r!=null)).Replace("\r\n","<br/>").Replace("\n","<br/>"))<br />
                            退貨請憑電子發票證明聯辦理<br />
                        </p>
                    </td>
                </tr>
            }
        </table>
    </div>
</div>






